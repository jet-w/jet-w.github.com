import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as i,e as t,o as s}from"./app-MFfEKSv4.js";const l={};function o(r,e){return s(),a("div",null,[e[0]||(e[0]=i(`<h1 id="human-systems-dialogic-agent" tabindex="-1"><a class="header-anchor" href="#human-systems-dialogic-agent"><span>Human Systems Dialogic Agent</span></a></h1><p>This project is for the setup/execution of the Human Systems Dialogic Agent.</p><p>The solution uses AWS CDK to automate the compilation of CloudFormation code for deployment to Human Systems&#39; Dialogic Agent AWS Environments (i.e. &#39;HS-DIALOGIC-AGENT-DEV&#39;, &#39;HS-DIALOGIC-AGENT-STAGE&#39; and &#39;HS-DIALOGIC-AGENT-PROD&#39; accounts).</p><ul><li><a href="#human-systems-dialogic-agent">Human Systems Dialogic Agent</a><ul><li><a href="#2-setup-local-environment-for-local-builddeployment">2. Setup Local Environment for local build/deployment</a><ul><li><a href="#21-software-pre-requisitesrecommendations">2.1 Software Pre-requisites/Recommendations</a></li></ul></li><li><a href="#3-cicd-initial-setup-once-off---setting-up-orchestration">3. CI/CD Initial Setup (Once-off) - Setting up Orchestration</a><ul><li><a href="#31-set-some-variables-we-will-reuse-for-the-deployment">3.1 Set some variables we will reuse for the deployment</a></li><li><a href="#32-setup-codecommit-repo-in-deployment-account">3.2 Setup CodeCommit Repo in DEPLOYMENT Account</a></li><li><a href="#33-deploy-the-s3-bucket-for-build-artifacts-with-policy--kms-key-to-deployment-account">3.3 Deploy the S3 Bucket for Build Artifacts with Policy + KMS Key to DEPLOYMENT Account</a></li><li><a href="#34-get-copy-of-kms-key-arn-just-created">3.4 Get Copy of KMS Key Arn just created</a></li><li><a href="#35-setup-iam-roles-for-codepipeline-to-access-deployment-account">3.5 Setup IAM Roles for CodePipeline to access DEPLOYMENT Account</a></li><li><a href="#36-deploy-iam-roles-and-kms-trust-with-target-account">3.6 Deploy IAM Roles and KMS Trust with TARGET Account</a></li><li><a href="#36-deploy-placeholder-secrets-used-by-application">3.6 Deploy Placeholder Secrets used by Application</a></li><li><a href="#37-setup-cicd-infrastructure-pipeline-codepipeline-to-deployment-account">3.7 Setup CI/CD Infrastructure Pipeline (CodePipeline) to DEPLOYMENT account</a></li></ul></li><li><a href="#4-testing-locally">4. Testing Locally</a><ul><li><a href="#41-python-environment-for-local-builddebugging">4.1 Python Environment for Local Build/Debugging</a></li><li><a href="#42-aws-cdk">4.2 AWS CDK</a></li><li><a href="#5-working-with-the-api-fastapi">5. Working with the API (FastAPI)</a><ul><li><a href="#running-locally">Running locally</a></li></ul></li></ul></li><li><a href="#7-contact">7. Contact</a></li></ul></li></ul><h2 id="_2-setup-local-environment-for-local-build-deployment" tabindex="-1"><a class="header-anchor" href="#_2-setup-local-environment-for-local-build-deployment"><span>2. Setup Local Environment for local build/deployment</span></a></h2><h3 id="_2-1-software-pre-requisites-recommendations" tabindex="-1"><a class="header-anchor" href="#_2-1-software-pre-requisites-recommendations"><span>2.1 Software Pre-requisites/Recommendations</span></a></h3><ol><li>An IDE (I recommend VS Code) [<a href="https://code.visualstudio.com/" target="_blank" rel="noopener noreferrer">https://code.visualstudio.com/</a>]<br> Some helpful VS Code Extensions! <ul><li>AWS <ul><li>AWS Toolkit (amazonwebservices.aws-toolkit-vscode) - Provides AWS Explorer for many services, AWS SAM integration</li><li>CloudFormation: <ul><li>CloudFormation (aws-scripting-guy) – intellisense for CloudFormation templates</li><li>Indent-rainbow (oderwat) – helps with seeing your indents in Python and YAML</li><li>YAML (redhat.vscode-yaml) - YAML validation and formatter</li><li>CloudFormation Linter (kddejong) - Fixes YAML Custom tags. Ironically you can uninstall it once installed (it will still modify your settings.json with the correct CloudFormation custom tags). If you do keep it installed you will also need to install Python and cfn-lint to get working correctly.</li></ul></li></ul></li></ul></li><li>AWS Account Setup as per &#39;AWS Control Tower&#39; landing zones. This will provide the best overarching security for your environment. You can proceed without this as long as you have minimally two aws accounts DEPLOYMENT (sweat-deployment) and a application account (sweat-production) but it is not recommended.</li><li>Atlassian Sourcetree [<a href="https://www.sourcetreeapp.com/" target="_blank" rel="noopener noreferrer">https://www.sourcetreeapp.com/</a>]</li><li>AWS CLI [<a href="https://aws.amazon.com/cli/" target="_blank" rel="noopener noreferrer">https://aws.amazon.com/cli/</a>]</li><li>AWS SAM CLI [<a href="https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install.html" target="_blank" rel="noopener noreferrer">https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install.html</a>]</li><li>AWS CDK [<a href="https://docs.aws.amazon.com/cdk/latest/guide/home.html" target="_blank" rel="noopener noreferrer">https://docs.aws.amazon.com/cdk/latest/guide/home.html</a>]</li><li>Setup your AWS profiles. To start by running:</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>aws configure</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>This step is mostly just to create a &#39;config&#39; and &#39;credentials&#39; text file located:<br> C:\\Users\\MYUSER.aws (assume your running this in Windows)<br> set your default region in the &#39;config&#39; file</p><p>This project assumes the following AWS profiles setup on your machine:<br> [hs-deployment] - the code and ci/cd account<br> [hs-dialogic-agent-dev] - target DEV environment account<br> [hs-dialogic-agent-stage] - target STAGE environment account<br> [hs-dialogic-agent-prod] - target PROD environment account</p><ol><li>Create a local build folders (using Bash Terminal)<br> mkdir .build .build/dev .build/stage .build/prod .build/cdk</li></ol><h2 id="_3-ci-cd-initial-setup-once-off-setting-up-orchestration" tabindex="-1"><a class="header-anchor" href="#_3-ci-cd-initial-setup-once-off-setting-up-orchestration"><span>3. CI/CD Initial Setup (Once-off) - Setting up Orchestration</span></a></h2><h3 id="_3-1-set-some-variables-we-will-reuse-for-the-deployment" tabindex="-1"><a class="header-anchor" href="#_3-1-set-some-variables-we-will-reuse-for-the-deployment"><span>3.1 Set some variables we will reuse for the deployment</span></a></h3><p>*<strong>DEV VARIABLES - OLD ONE - NEEDED TEMPORARILY</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>projectFriendlyName=&quot;Human Systems Dialogic Agent&quot;</span></span>
<span class="line"><span>projectResourcePrefix=&quot;hs-dialogic-agent&quot;</span></span>
<span class="line"><span>environmentType=&quot;dev&quot;</span></span>
<span class="line"><span>deploymentAccountNumber=&quot;851725322837&quot; </span></span>
<span class="line"><span>targetAccountNumber1=&quot;891377036533&quot;</span></span>
<span class="line"><span>profileDeploymentAccount=&quot;hs-deployment&quot;</span></span>
<span class="line"><span>profileTargetAccount1=&quot;hs-dialogic-agent-dev&quot;</span></span>
<span class="line"><span>awsregion=&quot;us-east-1&quot;</span></span>
<span class="line"><span>repoBranch=&quot;dev&quot;</span></span>
<span class="line"><span>artifactsBucketName=&quot;\${projectResourcePrefix}-\${environmentType}-buildartifacts&quot;</span></span>
<span class="line"><span>enableDeletionProtection=&quot;False&quot;</span></span>
<span class="line"><span>printf &quot;Done&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>*<strong>DEV VARIABLES</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>projectFriendlyName=&quot;Human Systems Dialogic Agent&quot;</span></span>
<span class="line"><span>projectResourcePrefix=&quot;hs-dialogic-agent&quot;</span></span>
<span class="line"><span>environmentType=&quot;dev-main&quot;</span></span>
<span class="line"><span>deploymentAccountNumber=&quot;851725322837&quot; </span></span>
<span class="line"><span>targetAccountNumber1=&quot;891377036533&quot;</span></span>
<span class="line"><span>profileDeploymentAccount=&quot;hs-deployment&quot;</span></span>
<span class="line"><span>profileTargetAccount1=&quot;hs-dialogic-agent-dev&quot;</span></span>
<span class="line"><span>awsregion=&quot;us-east-1&quot;</span></span>
<span class="line"><span>repoBranch=&quot;dev&quot;</span></span>
<span class="line"><span>artifactsBucketName=&quot;\${projectResourcePrefix}-\${environmentType}-buildartifacts&quot;</span></span>
<span class="line"><span>enableDeletionProtection=&quot;False&quot;</span></span>
<span class="line"><span>printf &quot;Done&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>*<strong>DEV/C3L VARIABLES</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>projectFriendlyName=&quot;Human Systems Dialogic Agent&quot;</span></span>
<span class="line"><span>projectResourcePrefix=&quot;hs-dialogic-agent&quot;</span></span>
<span class="line"><span>environmentType=&quot;dev-c3l&quot;</span></span>
<span class="line"><span>deploymentAccountNumber=&quot;851725322837&quot; </span></span>
<span class="line"><span>targetAccountNumber1=&quot;891377036533&quot;</span></span>
<span class="line"><span>profileDeploymentAccount=&quot;hs-deployment&quot;</span></span>
<span class="line"><span>profileTargetAccount1=&quot;hs-dialogic-agent-dev&quot;</span></span>
<span class="line"><span>awsregion=&quot;us-east-1&quot;</span></span>
<span class="line"><span>repoBranch=&quot;dev-c3l&quot;</span></span>
<span class="line"><span>artifactsBucketName=&quot;\${projectResourcePrefix}-\${environmentType}-buildartifacts&quot;</span></span>
<span class="line"><span>enableDeletionProtection=&quot;False&quot;</span></span>
<span class="line"><span>printf &quot;Done&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>*<strong>DEV/Figaro VARIABLES</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>projectFriendlyName=&quot;Human Systems Dialogic Agent&quot;</span></span>
<span class="line"><span>projectResourcePrefix=&quot;hs-dialogic-agent&quot;</span></span>
<span class="line"><span>environmentType=&quot;dev-figaro&quot;</span></span>
<span class="line"><span>deploymentAccountNumber=&quot;851725322837&quot; </span></span>
<span class="line"><span>targetAccountNumber1=&quot;891377036533&quot;</span></span>
<span class="line"><span>profileDeploymentAccount=&quot;hs-deployment&quot;</span></span>
<span class="line"><span>profileTargetAccount1=&quot;hs-dialogic-agent-dev&quot;</span></span>
<span class="line"><span>awsregion=&quot;us-east-1&quot;</span></span>
<span class="line"><span>repoBranch=&quot;dev-figaro&quot;</span></span>
<span class="line"><span>artifactsBucketName=&quot;\${projectResourcePrefix}-\${environmentType}-buildartifacts&quot;</span></span>
<span class="line"><span>enableDeletionProtection=&quot;False&quot;</span></span>
<span class="line"><span>printf &quot;Done&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-setup-codecommit-repo-in-deployment-account" tabindex="-1"><a class="header-anchor" href="#_3-2-setup-codecommit-repo-in-deployment-account"><span>3.2 Setup CodeCommit Repo in DEPLOYMENT Account</span></a></h3><ol><li>Compile the CloudFormation script</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>aws cloudformation package --template-file ./cf/setup/01_codecommit_repo.yaml --output-template-file &quot;./.build/_01_codecommit_repo.yaml&quot; --s3-bucket NOTUSED --profile $profileDeploymentAccount</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>Deploy the CloudFormation script</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>aws cloudformation deploy --template-file &quot;./.build/_01_codecommit_repo.yaml&quot; --stack-name &quot;\${projectResourcePrefix}-setup-codecommit&quot; --profile $profileDeploymentAccount --region $awsregion --capabilities CAPABILITY_NAMED_IAM --parameter-overrides ProjectFriendlyName=&quot;$projectFriendlyName&quot; ProjectResourcePrefix=$projectResourcePrefix</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_3-3-deploy-the-s3-bucket-for-build-artifacts-with-policy-kms-key-to-deployment-account" tabindex="-1"><a class="header-anchor" href="#_3-3-deploy-the-s3-bucket-for-build-artifacts-with-policy-kms-key-to-deployment-account"><span>3.3 Deploy the S3 Bucket for Build Artifacts with Policy + KMS Key to DEPLOYMENT Account</span></a></h3><ol><li>Compile the CloudFormation script</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>aws cloudformation package --template-file ./cf/setup/02_deployment_artifacts_and_kms.yaml --output-template-file &quot;./.build/\${environmentType}/_02_deployment_artifacts_and_kms.yaml&quot; --s3-bucket NOTUSED --profile $profileDeploymentAccount</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>Deploy the CloudFormation script</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>aws cloudformation deploy --template-file &quot;./.build/\${environmentType}/_02_deployment_artifacts_and_kms.yaml&quot; --stack-name &quot;\${projectResourcePrefix}-setup-kms-artif-\${environmentType}&quot; --profile $profileDeploymentAccount --region $awsregion --capabilities CAPABILITY_NAMED_IAM --parameter-overrides EnvironmentType=$environmentType TargetAccountNumber1=$targetAccountNumber1 ProjectFriendlyName=&quot;$projectFriendlyName&quot; ProjectResourcePrefix=$projectResourcePrefix</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_3-4-get-copy-of-kms-key-arn-just-created" tabindex="-1"><a class="header-anchor" href="#_3-4-get-copy-of-kms-key-arn-just-created"><span>3.4 Get Copy of KMS Key Arn just created</span></a></h3><p>This command will copy to a local variable the KMS Key Arn for step 3</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>get_cmk_command=&quot;aws cloudformation describe-stacks --stack-name &quot;\${projectResourcePrefix}-setup-kms-artif-\${environmentType}&quot; --profile $profileDeploymentAccount --region $awsregion --query \\&quot;Stacks[0].Outputs[?OutputKey==&#39;CodePipelineKMSKeyArn&#39;].OutputValue\\&quot; --output text&quot;</span></span>
<span class="line"><span>CodePipelineKMSKeyArn=$(eval $get_cmk_command)</span></span>
<span class="line"><span>printf &quot;Got CMK ARN: $CodePipelineKMSKeyArn&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-5-setup-iam-roles-for-codepipeline-to-access-deployment-account" tabindex="-1"><a class="header-anchor" href="#_3-5-setup-iam-roles-for-codepipeline-to-access-deployment-account"><span>3.5 Setup IAM Roles for CodePipeline to access DEPLOYMENT Account</span></a></h3><ol><li>Compile the CloudFormation script</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>aws cloudformation package --template-file ./cf/setup/03_iam_role_codepipeline.yaml --output-template-file &quot;./.build/\${environmentType}/_03_iam_role_codepipeline.yaml&quot; --s3-bucket NOTUSED --profile $profileDeploymentAccount</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>Deploy the CloudFormation script</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>aws cloudformation deploy --template-file &quot;./.build/\${environmentType}/_03_iam_role_codepipeline.yaml&quot; --stack-name &quot;\${projectResourcePrefix}-setup-cp-roles-\${environmentType}&quot; --profile $profileDeploymentAccount --region $awsregion --capabilities CAPABILITY_NAMED_IAM --parameter-overrides EnvironmentType=$environmentType DeploymentAccountNumber=$deploymentAccountNumber KMSKeyArn=$CodePipelineKMSKeyArn ProjectFriendlyName=&quot;$projectFriendlyName&quot; ProjectResourcePrefix=$projectResourcePrefix</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_3-6-deploy-iam-roles-and-kms-trust-with-target-account" tabindex="-1"><a class="header-anchor" href="#_3-6-deploy-iam-roles-and-kms-trust-with-target-account"><span>3.6 Deploy IAM Roles and KMS Trust with TARGET Account</span></a></h3><ol><li>Compile the CloudFormation script</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>aws cloudformation package --template-file ./cf/setup/04_target_deploy_roles.yaml --output-template-file &quot;./.build/\${environmentType}/_04_target_deploy_roles.yaml&quot; --s3-bucket NOTUSED --profile $profileDeploymentAccount</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>Deploy the CloudFormation script</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>aws cloudformation deploy --template-file &quot;./.build/\${environmentType}/_04_target_deploy_roles.yaml&quot; --stack-name &quot;\${projectResourcePrefix}-setup-deployroles-\${environmentType}&quot; --profile $profileTargetAccount1 --region $awsregion --capabilities CAPABILITY_NAMED_IAM --parameter-overrides EnvironmentType=$environmentType DeploymentAccountNumber=$deploymentAccountNumber KMSKeyArn=$CodePipelineKMSKeyArn ProjectFriendlyName=&quot;$projectFriendlyName&quot; ProjectResourcePrefix=$projectResourcePrefix</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_3-6-deploy-placeholder-secrets-used-by-application" tabindex="-1"><a class="header-anchor" href="#_3-6-deploy-placeholder-secrets-used-by-application"><span>3.6 Deploy Placeholder Secrets used by Application</span></a></h3>`,45)),t(' 1. Compile the CloudFormation script\n```\naws cloudformation package --template-file ./cf/setup/05_setup_secrets.yaml --output-template-file "./.build/${environmentType}/_05_setup_secrets.yaml" --s3-bucket NOTUSED --profile $profileDeploymentAccount\n```\n\n2. Deploy the CloudFormation script\n```\naws cloudformation deploy --template-file "./.build/${environmentType}/_05_setup_secrets.yaml" --stack-name "${projectResourcePrefix}-setup-secrets-${environmentType}" --profile $profileTargetAccount1 --region $awsregion --capabilities CAPABILITY_NAMED_IAM --parameter-overrides EnvironmentType=$environmentType ProjectFriendlyName="$projectFriendlyName" ProjectResourcePrefix=$projectResourcePrefix\n``` '),e[1]||(e[1]=i(`<h3 id="_3-7-setup-ci-cd-infrastructure-pipeline-codepipeline-to-deployment-account" tabindex="-1"><a class="header-anchor" href="#_3-7-setup-ci-cd-infrastructure-pipeline-codepipeline-to-deployment-account"><span>3.7 Setup CI/CD Infrastructure Pipeline (CodePipeline) to DEPLOYMENT account</span></a></h3><ol><li>Compile the CloudFormation script</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>aws cloudformation package --template-file ./cf/cicd/01_pipeline.yaml --output-template-file &quot;./.build/\${environmentType}/_01_pipeline.yaml&quot; --s3-bucket NOTUSED --profile $profileDeploymentAccount</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>Deploy the CloudFormation script</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>aws cloudformation deploy --template-file &quot;./.build/\${environmentType}/_01_pipeline.yaml&quot; --stack-name &quot;\${projectResourcePrefix}-pipeline-\${environmentType}&quot; --profile $profileDeploymentAccount --region $awsregion --capabilities CAPABILITY_NAMED_IAM --parameter-overrides EnvironmentType=$environmentType TargetAccountNumber1=$targetAccountNumber1 ProjectFriendlyName=&quot;$projectFriendlyName&quot; ProjectResourcePrefix=$projectResourcePrefix CFTemplateName=&quot;cdkapp.template.json&quot; BranchName=$repoBranch RepoAccountNumber=$deploymentAccountNumber EnableDeletionProtection=$enableDeletionProtection</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_4-testing-locally" tabindex="-1"><a class="header-anchor" href="#_4-testing-locally"><span>4. Testing Locally</span></a></h2><h3 id="_4-1-python-environment-for-local-build-debugging" tabindex="-1"><a class="header-anchor" href="#_4-1-python-environment-for-local-build-debugging"><span>4.1 Python Environment for Local Build/Debugging</span></a></h3><p>This project is set up like a standard Python project. The initialization process also creates<br> a virtualenv within this project, stored under the .venv directory. To create the virtualenv<br> it assumes that there is a <code>python3</code> executable in your path with access to the <code>venv</code> package.<br> If for any reason the automatic creation of the virtualenv fails, you can create the virtualenv<br> manually once the init process completes.</p><p>To manually create a virtualenv on MacOS and Linux:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>sudo apt install python3.8-venv</span></span>
<span class="line"><span>cd py-cdk/src</span></span>
<span class="line"><span>python3 -m venv .venv</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Install and Update NodeJS (required for CDK)</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>sudo apt-get install -y nodejs</span></span>
<span class="line"><span></span></span>
<span class="line"><span>curl -fsSL https://deb.nodesource.com/setup_current.x | sudo -E bash -</span></span>
<span class="line"><span>sudo apt-get install -y nodejs</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>After the init process completes and the virtualenv is created, you can use the following<br> step to activate your virtualenv.</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>cd py-cdk/src</span></span>
<span class="line"><span>source .venv/bin/activate</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>If you are a Windows platform, you would activate the virtualenv like this:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>% .venv\\Scripts\\activate.bat</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Once the virtualenv is activated, you can install the required dependencies.</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>$ pip install -r requirements.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_4-2-aws-cdk" tabindex="-1"><a class="header-anchor" href="#_4-2-aws-cdk"><span>4.2 AWS CDK</span></a></h3><p>Provided you have the AWS CDK installed locally you can test generated stacks built with this framework by providing the build script a local AWS Profile.</p><p>Run the AWS CDK build script from THE ROOT project folder on a bash terminal with:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>./cf/cicd/build_aws_cdk.sh -p $profileTargetAccount1 -s $artifactsBucketName -d $enableDeletionProtection</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Outputs from the CDK will be built to the (./.build/cdk) folder for reviewing.</p><h3 id="_5-working-with-the-api-fastapi" tabindex="-1"><a class="header-anchor" href="#_5-working-with-the-api-fastapi"><span>5. Working with the API (FastAPI)</span></a></h3><h4 id="running-locally" tabindex="-1"><a class="header-anchor" href="#running-locally"><span>Running locally</span></a></h4><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>cd &#39;{projectdirectory}/lambda/src/api&#39;</span></span>
<span class="line"><span>pip install -r requirements.txt</span></span>
<span class="line"><span>source ./env/bin/activate</span></span>
<span class="line"><span>export AWS_PROFILE=hs-saas-platform-dev</span></span>
<span class="line"><span>uvicorn index:app --reload</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Navigate to docs to get swagger site:<br><a href="http://localhost:8001/docs" target="_blank" rel="noopener noreferrer">http://localhost:8001/docs</a></p><h2 id="_7-contact" tabindex="-1"><a class="header-anchor" href="#_7-contact"><span>7. Contact</span></a></h2><p>For more information please contact:</p><ul><li><strong>Damien Coyle (Comunet Pty Ltd)</strong> - <em>Initial work OCT 2023</em> - <a href="https://www.comunet.com.au" target="_blank" rel="noopener noreferrer">Comunet</a></li></ul>`,30))])}const d=n(l,[["render",o],["__file","10.dialog-agent.html.vue"]]),u=JSON.parse('{"path":"/work/Blueprint_AI/10.dialog-agent.html","title":"10. Dialog Agent Readme","lang":"en-US","frontmatter":{"title":"10. Dialog Agent Readme","index":true,"icon":"circle-dot","author":"Haiyue","date":"2024-07-05T00:00:00.000Z","category":["work"],"feed":false,"seo":false,"gitInclude":[],"head":[]},"headers":[{"level":2,"title":"2. Setup Local Environment for local build/deployment","slug":"_2-setup-local-environment-for-local-build-deployment","link":"#_2-setup-local-environment-for-local-build-deployment","children":[{"level":3,"title":"2.1 Software Pre-requisites/Recommendations","slug":"_2-1-software-pre-requisites-recommendations","link":"#_2-1-software-pre-requisites-recommendations","children":[]}]},{"level":2,"title":"3. CI/CD Initial Setup (Once-off) - Setting up Orchestration","slug":"_3-ci-cd-initial-setup-once-off-setting-up-orchestration","link":"#_3-ci-cd-initial-setup-once-off-setting-up-orchestration","children":[{"level":3,"title":"3.1 Set some variables we will reuse for the deployment","slug":"_3-1-set-some-variables-we-will-reuse-for-the-deployment","link":"#_3-1-set-some-variables-we-will-reuse-for-the-deployment","children":[]},{"level":3,"title":"3.2 Setup CodeCommit Repo in DEPLOYMENT Account","slug":"_3-2-setup-codecommit-repo-in-deployment-account","link":"#_3-2-setup-codecommit-repo-in-deployment-account","children":[]},{"level":3,"title":"3.3 Deploy the S3 Bucket for Build Artifacts with Policy + KMS Key to DEPLOYMENT Account","slug":"_3-3-deploy-the-s3-bucket-for-build-artifacts-with-policy-kms-key-to-deployment-account","link":"#_3-3-deploy-the-s3-bucket-for-build-artifacts-with-policy-kms-key-to-deployment-account","children":[]},{"level":3,"title":"3.4 Get Copy of KMS Key Arn just created","slug":"_3-4-get-copy-of-kms-key-arn-just-created","link":"#_3-4-get-copy-of-kms-key-arn-just-created","children":[]},{"level":3,"title":"3.5 Setup IAM Roles for CodePipeline to access DEPLOYMENT Account","slug":"_3-5-setup-iam-roles-for-codepipeline-to-access-deployment-account","link":"#_3-5-setup-iam-roles-for-codepipeline-to-access-deployment-account","children":[]},{"level":3,"title":"3.6 Deploy IAM Roles and KMS Trust with TARGET Account","slug":"_3-6-deploy-iam-roles-and-kms-trust-with-target-account","link":"#_3-6-deploy-iam-roles-and-kms-trust-with-target-account","children":[]},{"level":3,"title":"3.6 Deploy Placeholder Secrets used by Application","slug":"_3-6-deploy-placeholder-secrets-used-by-application","link":"#_3-6-deploy-placeholder-secrets-used-by-application","children":[]},{"level":3,"title":"3.7 Setup CI/CD Infrastructure Pipeline (CodePipeline) to DEPLOYMENT account","slug":"_3-7-setup-ci-cd-infrastructure-pipeline-codepipeline-to-deployment-account","link":"#_3-7-setup-ci-cd-infrastructure-pipeline-codepipeline-to-deployment-account","children":[]}]},{"level":2,"title":"4. Testing Locally","slug":"_4-testing-locally","link":"#_4-testing-locally","children":[{"level":3,"title":"4.1 Python Environment for Local Build/Debugging","slug":"_4-1-python-environment-for-local-build-debugging","link":"#_4-1-python-environment-for-local-build-debugging","children":[]},{"level":3,"title":"4.2 AWS CDK","slug":"_4-2-aws-cdk","link":"#_4-2-aws-cdk","children":[]},{"level":3,"title":"5. Working with the API (FastAPI)","slug":"_5-working-with-the-api-fastapi","link":"#_5-working-with-the-api-fastapi","children":[{"level":4,"title":"Running locally","slug":"running-locally","link":"#running-locally","children":[]}]}]},{"level":2,"title":"7. Contact","slug":"_7-contact","link":"#_7-contact","children":[]}],"readingTime":{"minutes":5.17,"words":1551},"filePathRelative":"work/Blueprint&AI/10.dialog-agent.md","localizedDate":"July 5, 2024"}');export{d as comp,u as data};

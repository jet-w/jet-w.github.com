const n=JSON.parse(`{"key":"v-9f707e7c","path":"/techniques/geoscience/OGC/tile_coordinates.html","title":"Tile Coordinates","lang":"en-US","frontmatter":{"title":"Tile Coordinates","icon":"circle-dot","date":"2024-03-29T00:00:00.000Z","category":["geoscience"],"tag":["tile coordinates"],"star":false,"sticky":true,"description":"Tile Coordinates import math ''' The code of quad ------- 3 | 2 ------- 0 | 1 ------- The first layer of the earth will be split into | 0 | 1 | --------------------------------------------------- The code of WMTS will start from the left-top corner. The zero layer will split into | 0-0-0 | 0-1-0 | The first layer | 1-0-0 | 1-1-0 | 1-2-0 | 1-3-0 | --------------------------------- | 1-0-1 | 1-1-1 | 1-2-1 | 1-3-1 | ''' class tile_util: def __getGeojsonTemplate__(self, name): return { \\"type\\": \\"FeatureCollection\\", \\"name\\": name, \\"crs\\": { \\"type\\": \\"name\\", \\"properties\\": { \\"name\\": \\"urn:ogc:def:crs:OGC:1.3:CRS84\\" } }, \\"features\\": [] } def WMTS2Quad(self, ilayer, row, col): ''' @desc Convert WMTS index into quad index @param ilayer WMTS layer number (from 0) @param row WMTS layer tiley number @param col WMTS layer tilex number @return The quad index correspond to wmts index ''' offset = 180/2**ilayer lat = 90 - (row+0.5)*offset lng = (col+0.5)*offset - 180 return self.getTileQuad(lng, lat, ilayer+1) def Quad2WMTS(self, quad): ''' @desc Convert quad index into WMTS index @parm quad quad index @return The WMTS index (layer, col/x, row/y) ''' tilew = 360/(2**len(quad)) centerx = 0 centery = 0 for i in range(len(quad)): tilew = 360/(2**(i+1)) if i == 0: if quad[i] == '0': centerx = -90 centery = 0 else: centerx = 90 centery = 0 else: if quad[i] == '0': centerx -= tilew/2 centery -= tilew/2 if quad[i] == '1': centerx += tilew/2 centery -= tilew/2 if quad[i] == '2': centerx += tilew/2 centery += tilew/2 if quad[i] == '3': centerx -= tilew/2 centery += tilew/2 wmtsl = len(quad)-1 wmts_tilew = 180/(2**wmtsl) #print(centerx, centery, wmts_tilew) tilex = math.floor((centerx+180)/wmts_tilew) tiley = math.floor(-(centery-90)/wmts_tilew) return wmtsl, tilex, tiley # Get the sub block list of quad until the specified level def getWMTSSubTile(self, quad, level): rc = list() if len(quad) &lt; level-1: rc.extend(self.getWMTSSubTile(quad+'0', level)) rc.extend(self.getWMTSSubTile(quad+'1', level)) rc.extend(self.getWMTSSubTile(quad+'2', level)) rc.extend(self.getWMTSSubTile(quad+'3', level)) return rc elif len(quad) &gt;= level: return rc else: return [quad + '0', quad + '1', quad + '2', quad + '3', ] # Get the quad number on specified level according to latitude and longtitude. def getTileQuad(self, lng, lat, level): #level += 1 # Because of quad start from 0, thus the number of quad should plus 1 minx = -180 maxx = 180 miny = -90 maxy = 90 centerx = 0 centery = 0 tilew = 180 ret = '' for l in range(level): if l &lt;= 0: if lng &lt;= 0: centerx = -90 centery = 0 ret += '0' else: centerx = 90 centery = 0 ret += '1' else: if lng &lt; centerx and lat &lt; centery: ret += '0' centerx -= tilew/2 centery -= tilew/2 elif lng &gt; centerx and lat &lt; centery: ret += '1' centerx += tilew/2 centery -= tilew/2 elif lng &gt; centerx and lat &gt; centery: ret += '2' centerx += tilew/2 centery += tilew/2 else: ret += '3' centerx -= tilew/2 centery += tilew/2 tilew /= 2 return ret def getBoundingBox(self, quad): ''' Get the bounding box of quad block ''' l, x, y = self.Quad2WMTS(quad) tilew = 180/(2**l) maxx = x*tilew + tilew - 180 minx = x*tilew + 0 -180 maxy = 90 - (y*tilew + 0) miny = 90 - (y*tilew + tilew) return minx, maxx, miny, maxy def getGeojson(self, quad, targetLevel = None): ''' Get the geojson of quad if the targetLevel is not specified. Get the geojson for all sub block until targetLevel regard as quad as a base block ''' rc = None if targetLevel: rc = self.__getGeojsonTemplate__(f'{quad}-{targetLevel}') subs = self.getWMTSSubTile(quad, targetLevel) for i in subs: rc['features'].append(self.__getFeatureJson__(i)) else: rc = self.__getGeojsonTemplate__(f'{quad}') rc['features'].append(self.__getFeatureJson__(quad)) return rc def __getFeatureJson__(self, quad): ''' Get the geojson of quad ''' ret = { \\"type\\": \\"Feature\\", \\"properties\\": dict(), \\"geometry\\": { \\"type\\": \\"Polygon\\", \\"coordinates\\": list() } } minx, maxx, miny, maxy = self.getBoundingBox(quad) ret['geometry']['coordinates'].append( [[minx, miny], [minx, maxy], [maxx, maxy], [maxx, miny], [minx, miny]]) ret['properties']['quad'] = quad ret['properties']['wmts'] = self.Quad2WMTS(quad) return ret","head":[["meta",{"property":"og:url","content":"https://jet-w.github.io/techniques/geoscience/OGC/tile_coordinates.html"}],["meta",{"property":"og:site_name","content":"Haiyue's Blog"}],["meta",{"property":"og:title","content":"Tile Coordinates"}],["meta",{"property":"og:description","content":"Tile Coordinates import math ''' The code of quad ------- 3 | 2 ------- 0 | 1 ------- The first layer of the earth will be split into | 0 | 1 | --------------------------------------------------- The code of WMTS will start from the left-top corner. The zero layer will split into | 0-0-0 | 0-1-0 | The first layer | 1-0-0 | 1-1-0 | 1-2-0 | 1-3-0 | --------------------------------- | 1-0-1 | 1-1-1 | 1-2-1 | 1-3-1 | ''' class tile_util: def __getGeojsonTemplate__(self, name): return { \\"type\\": \\"FeatureCollection\\", \\"name\\": name, \\"crs\\": { \\"type\\": \\"name\\", \\"properties\\": { \\"name\\": \\"urn:ogc:def:crs:OGC:1.3:CRS84\\" } }, \\"features\\": [] } def WMTS2Quad(self, ilayer, row, col): ''' @desc Convert WMTS index into quad index @param ilayer WMTS layer number (from 0) @param row WMTS layer tiley number @param col WMTS layer tilex number @return The quad index correspond to wmts index ''' offset = 180/2**ilayer lat = 90 - (row+0.5)*offset lng = (col+0.5)*offset - 180 return self.getTileQuad(lng, lat, ilayer+1) def Quad2WMTS(self, quad): ''' @desc Convert quad index into WMTS index @parm quad quad index @return The WMTS index (layer, col/x, row/y) ''' tilew = 360/(2**len(quad)) centerx = 0 centery = 0 for i in range(len(quad)): tilew = 360/(2**(i+1)) if i == 0: if quad[i] == '0': centerx = -90 centery = 0 else: centerx = 90 centery = 0 else: if quad[i] == '0': centerx -= tilew/2 centery -= tilew/2 if quad[i] == '1': centerx += tilew/2 centery -= tilew/2 if quad[i] == '2': centerx += tilew/2 centery += tilew/2 if quad[i] == '3': centerx -= tilew/2 centery += tilew/2 wmtsl = len(quad)-1 wmts_tilew = 180/(2**wmtsl) #print(centerx, centery, wmts_tilew) tilex = math.floor((centerx+180)/wmts_tilew) tiley = math.floor(-(centery-90)/wmts_tilew) return wmtsl, tilex, tiley # Get the sub block list of quad until the specified level def getWMTSSubTile(self, quad, level): rc = list() if len(quad) &lt; level-1: rc.extend(self.getWMTSSubTile(quad+'0', level)) rc.extend(self.getWMTSSubTile(quad+'1', level)) rc.extend(self.getWMTSSubTile(quad+'2', level)) rc.extend(self.getWMTSSubTile(quad+'3', level)) return rc elif len(quad) &gt;= level: return rc else: return [quad + '0', quad + '1', quad + '2', quad + '3', ] # Get the quad number on specified level according to latitude and longtitude. def getTileQuad(self, lng, lat, level): #level += 1 # Because of quad start from 0, thus the number of quad should plus 1 minx = -180 maxx = 180 miny = -90 maxy = 90 centerx = 0 centery = 0 tilew = 180 ret = '' for l in range(level): if l &lt;= 0: if lng &lt;= 0: centerx = -90 centery = 0 ret += '0' else: centerx = 90 centery = 0 ret += '1' else: if lng &lt; centerx and lat &lt; centery: ret += '0' centerx -= tilew/2 centery -= tilew/2 elif lng &gt; centerx and lat &lt; centery: ret += '1' centerx += tilew/2 centery -= tilew/2 elif lng &gt; centerx and lat &gt; centery: ret += '2' centerx += tilew/2 centery += tilew/2 else: ret += '3' centerx -= tilew/2 centery += tilew/2 tilew /= 2 return ret def getBoundingBox(self, quad): ''' Get the bounding box of quad block ''' l, x, y = self.Quad2WMTS(quad) tilew = 180/(2**l) maxx = x*tilew + tilew - 180 minx = x*tilew + 0 -180 maxy = 90 - (y*tilew + 0) miny = 90 - (y*tilew + tilew) return minx, maxx, miny, maxy def getGeojson(self, quad, targetLevel = None): ''' Get the geojson of quad if the targetLevel is not specified. Get the geojson for all sub block until targetLevel regard as quad as a base block ''' rc = None if targetLevel: rc = self.__getGeojsonTemplate__(f'{quad}-{targetLevel}') subs = self.getWMTSSubTile(quad, targetLevel) for i in subs: rc['features'].append(self.__getFeatureJson__(i)) else: rc = self.__getGeojsonTemplate__(f'{quad}') rc['features'].append(self.__getFeatureJson__(quad)) return rc def __getFeatureJson__(self, quad): ''' Get the geojson of quad ''' ret = { \\"type\\": \\"Feature\\", \\"properties\\": dict(), \\"geometry\\": { \\"type\\": \\"Polygon\\", \\"coordinates\\": list() } } minx, maxx, miny, maxy = self.getBoundingBox(quad) ret['geometry']['coordinates'].append( [[minx, miny], [minx, maxy], [maxx, maxy], [maxx, miny], [minx, miny]]) ret['properties']['quad'] = quad ret['properties']['wmts'] = self.Quad2WMTS(quad) return ret"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-07-06T01:55:31.000Z"}],["meta",{"property":"article:author","content":"Haiyue"}],["meta",{"property":"article:tag","content":"tile coordinates"}],["meta",{"property":"article:published_time","content":"2024-03-29T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-06T01:55:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Tile Coordinates\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-29T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-06T01:55:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Haiyue\\",\\"url\\":\\"https://jet-w.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"Tile Coordinates","slug":"tile-coordinates","link":"#tile-coordinates","children":[]}],"git":{"createdTime":1720101475000,"updatedTime":1720230931000,"contributors":[{"name":"Haiyue","email":"nutterair1989@gmail.com","commits":2}]},"readingTime":{"minutes":2.14,"words":641},"filePathRelative":"techniques/geoscience/OGC/tile_coordinates.md","localizedDate":"March 29, 2024","excerpt":"<h2> Tile Coordinates</h2>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">import</span> math\\n\\n<span class=\\"token triple-quoted-string string\\">'''\\nThe code of quad\\n-------\\n3  |  2\\n-------\\n0  |  1\\n-------\\nThe first layer of the earth will be split into \\n| 0 | 1 |\\n\\n\\n---------------------------------------------------\\nThe code of WMTS will start from the left-top corner.\\nThe zero layer will split into\\n\\n| 0-0-0 | 0-1-0 |\\n\\nThe first layer \\n| 1-0-0 | 1-1-0 | 1-2-0 | 1-3-0 |\\n---------------------------------\\n| 1-0-1 | 1-1-1 | 1-2-1 | 1-3-1 |\\n'''</span>\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">tile_util</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">__getGeojsonTemplate__</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">,</span> name<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token string\\">\\"type\\"</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">\\"FeatureCollection\\"</span><span class=\\"token punctuation\\">,</span>\\n            <span class=\\"token string\\">\\"name\\"</span><span class=\\"token punctuation\\">:</span> name<span class=\\"token punctuation\\">,</span>\\n            <span class=\\"token string\\">\\"crs\\"</span><span class=\\"token punctuation\\">:</span> <span class=\\"token punctuation\\">{</span>\\n                <span class=\\"token string\\">\\"type\\"</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">\\"name\\"</span><span class=\\"token punctuation\\">,</span>\\n                <span class=\\"token string\\">\\"properties\\"</span><span class=\\"token punctuation\\">:</span> <span class=\\"token punctuation\\">{</span>\\n                    <span class=\\"token string\\">\\"name\\"</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">\\"urn:ogc:def:crs:OGC:1.3:CRS84\\"</span>\\n                <span class=\\"token punctuation\\">}</span>\\n            <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n            <span class=\\"token string\\">\\"features\\"</span><span class=\\"token punctuation\\">:</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    \\n    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">WMTS2Quad</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">,</span> ilayer<span class=\\"token punctuation\\">,</span> row<span class=\\"token punctuation\\">,</span> col<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token triple-quoted-string string\\">'''\\n        @desc Convert WMTS index into quad index\\n        @param ilayer WMTS layer number (from 0)\\n        @param row    WMTS layer tiley number\\n        @param col    WMTS layer tilex number\\n        @return The quad index correspond to wmts index\\n        '''</span>\\n        offset <span class=\\"token operator\\">=</span> <span class=\\"token number\\">180</span><span class=\\"token operator\\">/</span><span class=\\"token number\\">2</span><span class=\\"token operator\\">**</span>ilayer\\n        lat <span class=\\"token operator\\">=</span> <span class=\\"token number\\">90</span> <span class=\\"token operator\\">-</span> <span class=\\"token punctuation\\">(</span>row<span class=\\"token operator\\">+</span><span class=\\"token number\\">0.5</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">*</span>offset\\n        lng <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span>col<span class=\\"token operator\\">+</span><span class=\\"token number\\">0.5</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">*</span>offset <span class=\\"token operator\\">-</span> <span class=\\"token number\\">180</span>\\n        <span class=\\"token keyword\\">return</span> self<span class=\\"token punctuation\\">.</span>getTileQuad<span class=\\"token punctuation\\">(</span>lng<span class=\\"token punctuation\\">,</span> lat<span class=\\"token punctuation\\">,</span> ilayer<span class=\\"token operator\\">+</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span>\\n    \\n    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">Quad2WMTS</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">,</span> quad<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token triple-quoted-string string\\">'''\\n        @desc Convert quad index into WMTS index\\n        @parm quad quad index\\n        @return The WMTS index (layer, col/x, row/y)\\n        '''</span>\\n        tilew <span class=\\"token operator\\">=</span> <span class=\\"token number\\">360</span><span class=\\"token operator\\">/</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">2</span><span class=\\"token operator\\">**</span><span class=\\"token builtin\\">len</span><span class=\\"token punctuation\\">(</span>quad<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n        centerx <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span>\\n        centery <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span>\\n        <span class=\\"token keyword\\">for</span> i <span class=\\"token keyword\\">in</span> <span class=\\"token builtin\\">range</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">len</span><span class=\\"token punctuation\\">(</span>quad<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n            tilew <span class=\\"token operator\\">=</span> <span class=\\"token number\\">360</span><span class=\\"token operator\\">/</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">2</span><span class=\\"token operator\\">**</span><span class=\\"token punctuation\\">(</span>i<span class=\\"token operator\\">+</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token keyword\\">if</span> i <span class=\\"token operator\\">==</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">:</span>\\n                <span class=\\"token keyword\\">if</span> quad<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">==</span> <span class=\\"token string\\">'0'</span><span class=\\"token punctuation\\">:</span>\\n                    centerx <span class=\\"token operator\\">=</span> <span class=\\"token operator\\">-</span><span class=\\"token number\\">90</span>\\n                    centery <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span>\\n                <span class=\\"token keyword\\">else</span><span class=\\"token punctuation\\">:</span>\\n                    centerx <span class=\\"token operator\\">=</span> <span class=\\"token number\\">90</span>\\n                    centery <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span>\\n            <span class=\\"token keyword\\">else</span><span class=\\"token punctuation\\">:</span>\\n                <span class=\\"token keyword\\">if</span> quad<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">==</span> <span class=\\"token string\\">'0'</span><span class=\\"token punctuation\\">:</span>\\n                    centerx <span class=\\"token operator\\">-=</span> tilew<span class=\\"token operator\\">/</span><span class=\\"token number\\">2</span>\\n                    centery <span class=\\"token operator\\">-=</span> tilew<span class=\\"token operator\\">/</span><span class=\\"token number\\">2</span>\\n                <span class=\\"token keyword\\">if</span> quad<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">==</span> <span class=\\"token string\\">'1'</span><span class=\\"token punctuation\\">:</span>\\n                    centerx <span class=\\"token operator\\">+=</span> tilew<span class=\\"token operator\\">/</span><span class=\\"token number\\">2</span>\\n                    centery <span class=\\"token operator\\">-=</span> tilew<span class=\\"token operator\\">/</span><span class=\\"token number\\">2</span>\\n                <span class=\\"token keyword\\">if</span> quad<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">==</span> <span class=\\"token string\\">'2'</span><span class=\\"token punctuation\\">:</span>\\n                    centerx <span class=\\"token operator\\">+=</span> tilew<span class=\\"token operator\\">/</span><span class=\\"token number\\">2</span>\\n                    centery <span class=\\"token operator\\">+=</span> tilew<span class=\\"token operator\\">/</span><span class=\\"token number\\">2</span>\\n                <span class=\\"token keyword\\">if</span> quad<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">==</span> <span class=\\"token string\\">'3'</span><span class=\\"token punctuation\\">:</span>\\n                    centerx <span class=\\"token operator\\">-=</span> tilew<span class=\\"token operator\\">/</span><span class=\\"token number\\">2</span>\\n                    centery <span class=\\"token operator\\">+=</span> tilew<span class=\\"token operator\\">/</span><span class=\\"token number\\">2</span>\\n        wmtsl <span class=\\"token operator\\">=</span> <span class=\\"token builtin\\">len</span><span class=\\"token punctuation\\">(</span>quad<span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">-</span><span class=\\"token number\\">1</span>\\n        wmts_tilew <span class=\\"token operator\\">=</span> <span class=\\"token number\\">180</span><span class=\\"token operator\\">/</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">2</span><span class=\\"token operator\\">**</span>wmtsl<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token comment\\">#print(centerx, centery, wmts_tilew)</span>\\n        tilex <span class=\\"token operator\\">=</span> math<span class=\\"token punctuation\\">.</span>floor<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>centerx<span class=\\"token operator\\">+</span><span class=\\"token number\\">180</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">/</span>wmts_tilew<span class=\\"token punctuation\\">)</span>\\n        tiley <span class=\\"token operator\\">=</span> math<span class=\\"token punctuation\\">.</span>floor<span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">-</span><span class=\\"token punctuation\\">(</span>centery<span class=\\"token operator\\">-</span><span class=\\"token number\\">90</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">/</span>wmts_tilew<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">return</span> wmtsl<span class=\\"token punctuation\\">,</span> tilex<span class=\\"token punctuation\\">,</span> tiley\\n    \\n    <span class=\\"token comment\\"># Get the sub block list of quad until the specified level</span>\\n    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">getWMTSSubTile</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">,</span> quad<span class=\\"token punctuation\\">,</span> level<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        rc <span class=\\"token operator\\">=</span> <span class=\\"token builtin\\">list</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token builtin\\">len</span><span class=\\"token punctuation\\">(</span>quad<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&lt;</span> level<span class=\\"token operator\\">-</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">:</span>\\n            rc<span class=\\"token punctuation\\">.</span>extend<span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">.</span>getWMTSSubTile<span class=\\"token punctuation\\">(</span>quad<span class=\\"token operator\\">+</span><span class=\\"token string\\">'0'</span><span class=\\"token punctuation\\">,</span> level<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n            rc<span class=\\"token punctuation\\">.</span>extend<span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">.</span>getWMTSSubTile<span class=\\"token punctuation\\">(</span>quad<span class=\\"token operator\\">+</span><span class=\\"token string\\">'1'</span><span class=\\"token punctuation\\">,</span> level<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n            rc<span class=\\"token punctuation\\">.</span>extend<span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">.</span>getWMTSSubTile<span class=\\"token punctuation\\">(</span>quad<span class=\\"token operator\\">+</span><span class=\\"token string\\">'2'</span><span class=\\"token punctuation\\">,</span> level<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n            rc<span class=\\"token punctuation\\">.</span>extend<span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">.</span>getWMTSSubTile<span class=\\"token punctuation\\">(</span>quad<span class=\\"token operator\\">+</span><span class=\\"token string\\">'3'</span><span class=\\"token punctuation\\">,</span> level<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token keyword\\">return</span> rc\\n        <span class=\\"token keyword\\">elif</span> <span class=\\"token builtin\\">len</span><span class=\\"token punctuation\\">(</span>quad<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&gt;=</span> level<span class=\\"token punctuation\\">:</span>\\n            <span class=\\"token keyword\\">return</span> rc\\n        <span class=\\"token keyword\\">else</span><span class=\\"token punctuation\\">:</span>\\n            <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">[</span>quad <span class=\\"token operator\\">+</span> <span class=\\"token string\\">'0'</span><span class=\\"token punctuation\\">,</span> quad <span class=\\"token operator\\">+</span> <span class=\\"token string\\">'1'</span><span class=\\"token punctuation\\">,</span> quad <span class=\\"token operator\\">+</span> <span class=\\"token string\\">'2'</span><span class=\\"token punctuation\\">,</span> quad <span class=\\"token operator\\">+</span> <span class=\\"token string\\">'3'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">]</span>\\n    \\n    <span class=\\"token comment\\"># Get the quad number on specified level according to latitude and longtitude.</span>\\n    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">getTileQuad</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">,</span> lng<span class=\\"token punctuation\\">,</span> lat<span class=\\"token punctuation\\">,</span> level<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token comment\\">#level += 1 # Because of quad start from 0, thus the number of quad should plus 1</span>\\n        minx <span class=\\"token operator\\">=</span> <span class=\\"token operator\\">-</span><span class=\\"token number\\">180</span>\\n        maxx <span class=\\"token operator\\">=</span> <span class=\\"token number\\">180</span>\\n        miny <span class=\\"token operator\\">=</span> <span class=\\"token operator\\">-</span><span class=\\"token number\\">90</span>\\n        maxy <span class=\\"token operator\\">=</span> <span class=\\"token number\\">90</span>\\n        \\n        centerx <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span>\\n        centery <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span>\\n        tilew <span class=\\"token operator\\">=</span> <span class=\\"token number\\">180</span>\\n        ret <span class=\\"token operator\\">=</span> <span class=\\"token string\\">''</span>\\n        <span class=\\"token keyword\\">for</span> l <span class=\\"token keyword\\">in</span> <span class=\\"token builtin\\">range</span><span class=\\"token punctuation\\">(</span>level<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n            <span class=\\"token keyword\\">if</span> l <span class=\\"token operator\\">&lt;=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">:</span>\\n                <span class=\\"token keyword\\">if</span> lng <span class=\\"token operator\\">&lt;=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">:</span>\\n                    centerx <span class=\\"token operator\\">=</span> <span class=\\"token operator\\">-</span><span class=\\"token number\\">90</span>\\n                    centery <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span>\\n                    ret <span class=\\"token operator\\">+=</span> <span class=\\"token string\\">'0'</span>\\n                <span class=\\"token keyword\\">else</span><span class=\\"token punctuation\\">:</span>\\n                    centerx <span class=\\"token operator\\">=</span> <span class=\\"token number\\">90</span>\\n                    centery <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span>\\n                    ret <span class=\\"token operator\\">+=</span> <span class=\\"token string\\">'1'</span>\\n            <span class=\\"token keyword\\">else</span><span class=\\"token punctuation\\">:</span>\\n                <span class=\\"token keyword\\">if</span> lng <span class=\\"token operator\\">&lt;</span> centerx <span class=\\"token keyword\\">and</span> lat <span class=\\"token operator\\">&lt;</span> centery<span class=\\"token punctuation\\">:</span>\\n                    ret <span class=\\"token operator\\">+=</span> <span class=\\"token string\\">'0'</span>\\n                    centerx <span class=\\"token operator\\">-=</span> tilew<span class=\\"token operator\\">/</span><span class=\\"token number\\">2</span>\\n                    centery <span class=\\"token operator\\">-=</span> tilew<span class=\\"token operator\\">/</span><span class=\\"token number\\">2</span>\\n                <span class=\\"token keyword\\">elif</span> lng <span class=\\"token operator\\">&gt;</span> centerx <span class=\\"token keyword\\">and</span> lat <span class=\\"token operator\\">&lt;</span> centery<span class=\\"token punctuation\\">:</span>\\n                    ret <span class=\\"token operator\\">+=</span> <span class=\\"token string\\">'1'</span>\\n                    centerx <span class=\\"token operator\\">+=</span> tilew<span class=\\"token operator\\">/</span><span class=\\"token number\\">2</span>\\n                    centery <span class=\\"token operator\\">-=</span> tilew<span class=\\"token operator\\">/</span><span class=\\"token number\\">2</span>\\n                <span class=\\"token keyword\\">elif</span> lng <span class=\\"token operator\\">&gt;</span> centerx <span class=\\"token keyword\\">and</span> lat <span class=\\"token operator\\">&gt;</span> centery<span class=\\"token punctuation\\">:</span>\\n                    ret <span class=\\"token operator\\">+=</span> <span class=\\"token string\\">'2'</span>\\n                    centerx <span class=\\"token operator\\">+=</span> tilew<span class=\\"token operator\\">/</span><span class=\\"token number\\">2</span>\\n                    centery <span class=\\"token operator\\">+=</span> tilew<span class=\\"token operator\\">/</span><span class=\\"token number\\">2</span>\\n                <span class=\\"token keyword\\">else</span><span class=\\"token punctuation\\">:</span>\\n                    ret <span class=\\"token operator\\">+=</span> <span class=\\"token string\\">'3'</span>\\n                    centerx <span class=\\"token operator\\">-=</span> tilew<span class=\\"token operator\\">/</span><span class=\\"token number\\">2</span>\\n                    centery <span class=\\"token operator\\">+=</span> tilew<span class=\\"token operator\\">/</span><span class=\\"token number\\">2</span>\\n            tilew <span class=\\"token operator\\">/=</span> <span class=\\"token number\\">2</span>\\n        <span class=\\"token keyword\\">return</span> ret\\n    \\n    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">getBoundingBox</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">,</span> quad<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token triple-quoted-string string\\">'''\\n        Get the bounding box of quad block\\n        '''</span>\\n        l<span class=\\"token punctuation\\">,</span> x<span class=\\"token punctuation\\">,</span> y <span class=\\"token operator\\">=</span> self<span class=\\"token punctuation\\">.</span>Quad2WMTS<span class=\\"token punctuation\\">(</span>quad<span class=\\"token punctuation\\">)</span>\\n        tilew  <span class=\\"token operator\\">=</span> <span class=\\"token number\\">180</span><span class=\\"token operator\\">/</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">2</span><span class=\\"token operator\\">**</span>l<span class=\\"token punctuation\\">)</span>\\n        maxx <span class=\\"token operator\\">=</span> x<span class=\\"token operator\\">*</span>tilew <span class=\\"token operator\\">+</span> tilew <span class=\\"token operator\\">-</span> <span class=\\"token number\\">180</span>\\n        minx <span class=\\"token operator\\">=</span> x<span class=\\"token operator\\">*</span>tilew <span class=\\"token operator\\">+</span> <span class=\\"token number\\">0</span> <span class=\\"token operator\\">-</span><span class=\\"token number\\">180</span>\\n        maxy <span class=\\"token operator\\">=</span> <span class=\\"token number\\">90</span> <span class=\\"token operator\\">-</span> <span class=\\"token punctuation\\">(</span>y<span class=\\"token operator\\">*</span>tilew <span class=\\"token operator\\">+</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span>\\n        miny <span class=\\"token operator\\">=</span> <span class=\\"token number\\">90</span> <span class=\\"token operator\\">-</span> <span class=\\"token punctuation\\">(</span>y<span class=\\"token operator\\">*</span>tilew <span class=\\"token operator\\">+</span> tilew<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">return</span> minx<span class=\\"token punctuation\\">,</span> maxx<span class=\\"token punctuation\\">,</span> miny<span class=\\"token punctuation\\">,</span> maxy \\n    \\n    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">getGeojson</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">,</span> quad<span class=\\"token punctuation\\">,</span> targetLevel <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">None</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token triple-quoted-string string\\">'''\\n        Get the geojson of quad if the targetLevel is not specified.\\n        Get the geojson for all sub block until targetLevel regard as quad as a base block\\n        '''</span>\\n        rc <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">None</span>\\n        <span class=\\"token keyword\\">if</span> targetLevel<span class=\\"token punctuation\\">:</span>\\n            rc <span class=\\"token operator\\">=</span> self<span class=\\"token punctuation\\">.</span>__getGeojsonTemplate__<span class=\\"token punctuation\\">(</span><span class=\\"token string-interpolation\\"><span class=\\"token string\\">f'</span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>quad<span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">-</span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>targetLevel<span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">'</span></span><span class=\\"token punctuation\\">)</span>\\n            subs <span class=\\"token operator\\">=</span> self<span class=\\"token punctuation\\">.</span>getWMTSSubTile<span class=\\"token punctuation\\">(</span>quad<span class=\\"token punctuation\\">,</span> targetLevel<span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token keyword\\">for</span> i <span class=\\"token keyword\\">in</span> subs<span class=\\"token punctuation\\">:</span>\\n                rc<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'features'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span>append<span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">.</span>__getFeatureJson__<span class=\\"token punctuation\\">(</span>i<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">else</span><span class=\\"token punctuation\\">:</span>\\n            rc <span class=\\"token operator\\">=</span> self<span class=\\"token punctuation\\">.</span>__getGeojsonTemplate__<span class=\\"token punctuation\\">(</span><span class=\\"token string-interpolation\\"><span class=\\"token string\\">f'</span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>quad<span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">'</span></span><span class=\\"token punctuation\\">)</span>\\n            rc<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'features'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span>append<span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">.</span>__getFeatureJson__<span class=\\"token punctuation\\">(</span>quad<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">return</span> rc\\n    \\n    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">__getFeatureJson__</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">,</span> quad<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token triple-quoted-string string\\">'''\\n        Get the geojson of quad\\n        '''</span>\\n        ret <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>\\n                <span class=\\"token string\\">\\"type\\"</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">\\"Feature\\"</span><span class=\\"token punctuation\\">,</span>\\n                <span class=\\"token string\\">\\"properties\\"</span><span class=\\"token punctuation\\">:</span> <span class=\\"token builtin\\">dict</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n                <span class=\\"token string\\">\\"geometry\\"</span><span class=\\"token punctuation\\">:</span> <span class=\\"token punctuation\\">{</span>\\n                    <span class=\\"token string\\">\\"type\\"</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">\\"Polygon\\"</span><span class=\\"token punctuation\\">,</span>\\n                    <span class=\\"token string\\">\\"coordinates\\"</span><span class=\\"token punctuation\\">:</span> <span class=\\"token builtin\\">list</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n                <span class=\\"token punctuation\\">}</span>\\n            <span class=\\"token punctuation\\">}</span>\\n        minx<span class=\\"token punctuation\\">,</span> maxx<span class=\\"token punctuation\\">,</span> miny<span class=\\"token punctuation\\">,</span> maxy  <span class=\\"token operator\\">=</span> self<span class=\\"token punctuation\\">.</span>getBoundingBox<span class=\\"token punctuation\\">(</span>quad<span class=\\"token punctuation\\">)</span>\\n        ret<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'geometry'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'coordinates'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span>append<span class=\\"token punctuation\\">(</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">[</span>minx<span class=\\"token punctuation\\">,</span> miny<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">[</span>minx<span class=\\"token punctuation\\">,</span> maxy<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">[</span>maxx<span class=\\"token punctuation\\">,</span> maxy<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">[</span>maxx<span class=\\"token punctuation\\">,</span> miny<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">[</span>minx<span class=\\"token punctuation\\">,</span> miny<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n        ret<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'properties'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'quad'</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> quad\\n        ret<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'properties'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'wmts'</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> self<span class=\\"token punctuation\\">.</span>Quad2WMTS<span class=\\"token punctuation\\">(</span>quad<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">return</span> ret\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};

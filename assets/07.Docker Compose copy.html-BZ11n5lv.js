import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,d as o,o as a}from"./app-CQ91q4H9.js";const t={};function n(l,e){return a(),s("div",null,e[0]||(e[0]=[o(`<h2 id="brief" tabindex="-1"><a class="header-anchor" href="#brief"><span>Brief</span></a></h2><p>Compose is a tool software come from Docker, which can manage an application from multiple docker containers. You need to define a YAML file <code>docker-compose.yml</code>, to define the relationship among containers. Then, to startup or shutdown with one command.</p><h2 id="download" tabindex="-1"><a class="header-anchor" href="#download"><span>Download</span></a></h2><p><a href="https://docs.docker.com/compose/compose-file/compose-file-v3" target="_blank" rel="noopener noreferrer">Official Document</a><br><a href="https://docs.docker.compose/install" target="_blank" rel="noopener noreferrer">Official Download</a></p><h2 id="docker-compose" tabindex="-1"><a class="header-anchor" href="#docker-compose"><span>Docker Compose</span></a></h2><h3 id="docker-compose-core-concepts" tabindex="-1"><a class="header-anchor" href="#docker-compose-core-concepts"><span>Docker Compose Core Concepts</span></a></h3><ol><li>One file<br><code>docker-compose.yml</code></li><li>Two elements <ol><li>service:</li><li>project: a set of container comprise a complete business unit, which are defined in <code>docker-compose.yml</code></li></ol></li></ol><h3 id="docker-compose-steps" tabindex="-1"><a class="header-anchor" href="#docker-compose-steps"><span>Docker Compose Steps</span></a></h3><ol><li>Write Dockerfile, define kinds of microservices and build correlated images</li><li>Use <code>docker-compose.yml</code> define a complete business unit, arrange each container service.</li><li>Execute <code>docker-compose up</code> command to startup all the applications.</li></ol><h3 id="most-used-commands-for-compose" tabindex="-1"><a class="header-anchor" href="#most-used-commands-for-compose"><span>Most Used Commands for Compose</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker-compose</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -h</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker-compose</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> up</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # startup all docker-compose service</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker-compose</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> up</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">   # startup all docker-compose service and run in the backend</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker-compose</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> down</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # shutdown and delete container, network, volume and images.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker-compose</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {service</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> id</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> in</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> yml}</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  #docker-compose exec docker-</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker-compose</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # display all containers under current docker-compose </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker-compose</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> top</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     # display all containers process under current docker-compose </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker-compose</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> logs</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {service</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> id</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> in</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> yml}</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # display logs</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker-compose</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # check configuration</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker-compose</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -q</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # check all the configuration, only display when some errors happened</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker-compose</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> restart</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # restart service</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker-compose</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">   # start service</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker-compose</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stop</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # stop service</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="reference" tabindex="-1"><a class="header-anchor" href="#reference"><span>Reference</span></a></h2><ol><li><a href="https://www.youtube.com/watch?v=lcOj04Z0St4&amp;list=PLmOn9nNkQxJFtOGw9fsoLHgtCxcki7TtK&amp;index=66" target="_blank" rel="noopener noreferrer">Tutoriaspoint</a></li><li><a href="https://www.runoob.com/docker/docker-dockerfile.html" target="_blank" rel="noopener noreferrer">Docker Dockerfile on runoob</a></li><li><a href="https://docs.docker.com/engine/reference/builder/" target="_blank" rel="noopener noreferrer">Dockerfile reference (official)</a></li></ol>`,13)]))}const p=i(t,[["render",n],["__file","07.Docker Compose copy.html.vue"]]),h=JSON.parse(`{"path":"/techniques/Tools/docker/07.Docker%20Compose%20copy.html","title":"06. Docker Network","lang":"en-US","frontmatter":{"title":"06. Docker Network","date":"2024-10-23T00:00:00.000Z","icon":"circle-dot","author":"Haiyue","category":["docker"],"tag":["docker"],"star":true,"sticky":true,"description":"Brief Compose is a tool software come from Docker, which can manage an application from multiple docker containers. You need to define a YAML file docker-compose.yml, to define ...","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://jet-w.github.io/techniques/Tools/docker/07.Docker%20Compose%20copy.html"}],["meta",{"property":"og:site_name","content":"Haiyue's Blog"}],["meta",{"property":"og:title","content":"06. Docker Network"}],["meta",{"property":"og:description","content":"Brief Compose is a tool software come from Docker, which can manage an application from multiple docker containers. You need to define a YAML file docker-compose.yml, to define ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:author","content":"Haiyue"}],["meta",{"property":"article:tag","content":"docker"}],["meta",{"property":"article:published_time","content":"2024-10-23T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"06. Docker Network\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-10-23T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Haiyue\\"}]}"]]},"headers":[{"level":2,"title":"Brief","slug":"brief","link":"#brief","children":[]},{"level":2,"title":"Download","slug":"download","link":"#download","children":[]},{"level":2,"title":"Docker Compose","slug":"docker-compose","link":"#docker-compose","children":[{"level":3,"title":"Docker Compose Core Concepts","slug":"docker-compose-core-concepts","link":"#docker-compose-core-concepts","children":[]},{"level":3,"title":"Docker Compose Steps","slug":"docker-compose-steps","link":"#docker-compose-steps","children":[]},{"level":3,"title":"Most Used Commands for Compose","slug":"most-used-commands-for-compose","link":"#most-used-commands-for-compose","children":[]}]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"readingTime":{"minutes":0.96,"words":289},"filePathRelative":"techniques/Tools/docker/07.Docker Compose copy.md","localizedDate":"October 23, 2024","excerpt":"<h2>Brief</h2>\\n<p>Compose is a tool software come from Docker, which can manage an application from multiple docker containers. You need to define a YAML file <code>docker-compose.yml</code>, to define the relationship among containers. Then, to startup or shutdown with one command.</p>\\n<h2>Download</h2>","autoDesc":true}`);export{p as comp,h as data};

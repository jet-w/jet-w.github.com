const n=JSON.parse(`{"key":"v-d3b41c40","path":"/techniques/coding/python/fmd5.html","title":"File MD5","lang":"en-US","frontmatter":{"title":"File MD5","date":"2024-01-26T00:00:00.000Z","author":"Haiyue","icon":"circle-dot","category":["python","md5"],"star":false,"sticky":false,"description":"import hashlib import os def getmd5(filename): # Open,close, read file and calculate MD5 on its contents with open(filename, 'rb') as file_to_check: # read contents of the file data = file_to_check.read() # pipe contents of the file through return hashlib.md5(data).hexdigest() def fsmd5(fpath): ret = dict() for p, folders, fs in os.walk(fpath): for i in fs: fullpath = os.path.join(p,i) relative_f = fullpath[len(fpath)+1:] ret[relative_f] = getmd5(fullpath) return ret","head":[["meta",{"property":"og:url","content":"https://seamice.github.io/blog/techniques/coding/python/fmd5.html"}],["meta",{"property":"og:site_name","content":"Haiyue's Blog"}],["meta",{"property":"og:title","content":"File MD5"}],["meta",{"property":"og:description","content":"import hashlib import os def getmd5(filename): # Open,close, read file and calculate MD5 on its contents with open(filename, 'rb') as file_to_check: # read contents of the file data = file_to_check.read() # pipe contents of the file through return hashlib.md5(data).hexdigest() def fsmd5(fpath): ret = dict() for p, folders, fs in os.walk(fpath): for i in fs: fullpath = os.path.join(p,i) relative_f = fullpath[len(fpath)+1:] ret[relative_f] = getmd5(fullpath) return ret"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-01-26T02:41:26.000Z"}],["meta",{"property":"article:author","content":"Haiyue"}],["meta",{"property":"article:published_time","content":"2024-01-26T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-26T02:41:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"File MD5\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-01-26T00:00:00.000Z\\",\\"dateModified\\":\\"2024-01-26T02:41:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Haiyue\\"}]}"]]},"headers":[],"git":{"createdTime":1706236886000,"updatedTime":1706236886000,"contributors":[{"name":"Haiyue","email":"nutterair1989@gmail.com","commits":1}]},"readingTime":{"minutes":0.3,"words":91},"filePathRelative":"techniques/coding/python/fmd5.md","localizedDate":"January 26, 2024","excerpt":"<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">import</span> hashlib\\n<span class=\\"token keyword\\">import</span> os\\n\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">getmd5</span><span class=\\"token punctuation\\">(</span>filename<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token comment\\"># Open,close, read file and calculate MD5 on its contents </span>\\n    <span class=\\"token keyword\\">with</span> <span class=\\"token builtin\\">open</span><span class=\\"token punctuation\\">(</span>filename<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'rb'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">as</span> file_to_check<span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token comment\\"># read contents of the file</span>\\n        data <span class=\\"token operator\\">=</span> file_to_check<span class=\\"token punctuation\\">.</span>read<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>    \\n        <span class=\\"token comment\\"># pipe contents of the file through</span>\\n        <span class=\\"token keyword\\">return</span> hashlib<span class=\\"token punctuation\\">.</span>md5<span class=\\"token punctuation\\">(</span>data<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span>hexdigest<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">fsmd5</span><span class=\\"token punctuation\\">(</span>fpath<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    ret <span class=\\"token operator\\">=</span> <span class=\\"token builtin\\">dict</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">for</span> p<span class=\\"token punctuation\\">,</span> folders<span class=\\"token punctuation\\">,</span> fs <span class=\\"token keyword\\">in</span> os<span class=\\"token punctuation\\">.</span>walk<span class=\\"token punctuation\\">(</span>fpath<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">for</span> i <span class=\\"token keyword\\">in</span> fs<span class=\\"token punctuation\\">:</span>\\n            fullpath <span class=\\"token operator\\">=</span> os<span class=\\"token punctuation\\">.</span>path<span class=\\"token punctuation\\">.</span>join<span class=\\"token punctuation\\">(</span>p<span class=\\"token punctuation\\">,</span>i<span class=\\"token punctuation\\">)</span>\\n            relative_f <span class=\\"token operator\\">=</span> fullpath<span class=\\"token punctuation\\">[</span><span class=\\"token builtin\\">len</span><span class=\\"token punctuation\\">(</span>fpath<span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">+</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">:</span><span class=\\"token punctuation\\">]</span>\\n            ret<span class=\\"token punctuation\\">[</span>relative_f<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> getmd5<span class=\\"token punctuation\\">(</span>fullpath<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">return</span> ret\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};

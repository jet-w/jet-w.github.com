import{_ as h}from"./BayesianNetwork-Dpchi6V4.js";import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,d as i,b as l,a as r,h as a,o as n,r as o}from"./app-Dt1lWXn2.js";const d={},k={class:"hint-container details"},c={class:"MathJax",jax:"SVG",style:{position:"relative"}},g={style:{"vertical-align":"-0.09ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.76ex",height:"1.312ex",role:"img",focusable:"false",viewBox:"0 -540 778 580","aria-hidden":"true"},m={class:"MathJax",jax:"SVG",style:{position:"relative"}},u={style:{"vertical-align":"-0.09ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.76ex",height:"1.312ex",role:"img",focusable:"false",viewBox:"0 -540 778 580","aria-hidden":"true"};function A(B,s){const t=o("PDF");return n(),e("div",null,[s[15]||(s[15]=i("h2",{id:"requirements",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#requirements"},[i("span",null,"Requirements")])],-1)),s[16]||(s[16]=i("h2",{id:"instructions",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#instructions"},[i("span",null,"Instructions")])],-1)),i("details",k,[s[0]||(s[0]=i("summary",null,"Instructions",-1)),l(t,{url:"/data/unisa/AdvancedAnalytic2/project/project.pdf",ratio:"1.4"}),s[1]||(s[1]=i("h3",{id:"marking-guide",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#marking-guide"},[i("span",null,"Marking Guide")])],-1)),l(t,{url:"/data/unisa/AdvancedAnalytic2/project/Marking Guidelines - Project.pdf",ratio:"1.4"})]),s[17]||(s[17]=r(`<h2 id="dataset" tabindex="-1"><a class="header-anchor" href="#dataset"><span>Dataset</span></a></h2><p><code>BRCA-50</code> is a Breast cancer dataset, including the expression levels of 50 important genes in Breast cancer.</p><ol><li>The dataset includes <span style="color:orange;">1212 samples</span> with</li><li><span style="color:orange;">112 samples</span> are of <span style="color:orange;">normal cases (class = N)</span> and</li><li><span style="color:orange;">1100 samples</span> are of <span style="color:orange;">cancer patients (class = C)</span>.</li></ol><h2 id="tasks" tabindex="-1"><a class="header-anchor" href="#tasks"><span>Tasks</span></a></h2><h3 id="load-library" tabindex="-1"><a class="header-anchor" href="#load-library"><span>Load library</span></a></h3><div class="language-r line-numbers-mode" data-highlighter="shiki" data-ext="r" data-title="r" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">library</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(tidyverse)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">library</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(gRain)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">library</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(pcalg)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">library</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(bnlearn)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="load-data" tabindex="-1"><a class="header-anchor" href="#load-data"><span>Load data</span></a></h3><div class="language-r line-numbers-mode" data-highlighter="shiki" data-ext="r" data-title="r" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">data </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;-</span><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;"> read_csv</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://seamice.github.io/data/unisa/AdvancedAnalytic2/project/BRCA_RNASeqv2_top50.csv&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">col_names</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> TRUE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">data_no_class </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> data %&gt;% </span><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">class)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="task-1-causal-structure-cpdag" tabindex="-1"><a class="header-anchor" href="#task-1-causal-structure-cpdag"><span>Task 1: Causal Structure (CPDAG)</span></a></h3><p>Use a <span style="color:orange;">causal structure learning algorithm</span> to <span style="color:orange;">find the gene regulatory network</span>, i.e. the network showing the interactions between genes, using the gene expression data. <span style="color:orange;">Explain how the algorithm works.</span> <span style="color:red;font-weight:bold;">(4)</span></p><div class="hint-container info"><p class="hint-container-title">Hints</p><p>Hints: Please exclude the class variable in building the network</p></div><hr><h4 id="_1-1-learn-the-structure" tabindex="-1"><a class="header-anchor" href="#_1-1-learn-the-structure"><span>1.1 <strong>Learn the structure</strong></span></a></h4><p>Select the <code>PC</code> algorithm to learn the <code>CPTAG</code></p><div class="language-r line-numbers-mode" data-highlighter="shiki" data-ext="r" data-title="r" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">pc.fit </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;-</span><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;"> pc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">  suffStat</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">C</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> cor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(data.no.class), </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> nrow</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(data.no.class)), </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">  indepTest</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> gaussCItest, </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">  alpha</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.01</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">  labels</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> colnames</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(data.no.class)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  #labels = as.character(1:50)  #label node names</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#data.frame(NUM=1:50, NAME=colnames(data.no.class))</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">plot</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(pc.fit, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">main</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;CPDAG&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_1-2-explain-how-the-algorithm-works" tabindex="-1"><a class="header-anchor" href="#_1-2-explain-how-the-algorithm-works"><span>1.2 <strong>Explain how the algorithm works</strong></span></a></h4><p><code>PC algorithm</code> is an approach to learn the graph from a data set. The algorithm could be plit into two parts. The first part is to learn the correlation among variables, which is lso called learning skeleton. The second part is to find the direction of the elationship, which is also called as orientating the edges.</p><p><span style="font-weight:bold;color:red;">For this case</span>,</p><hr><p><strong>Learning skeleton</strong></p><p><strong>Input:</strong> Data set <em><strong>D</strong></em>, significant level <em><strong>alpha</strong></em><br><strong>Output:</strong> The undirected graph <em><strong>G</strong></em> with a set of edges <em><strong>E</strong></em></p><p>The first part, the alpha has been set <em><strong>alpha = 0.01</strong></em>, <em><strong>depth = 0</strong></em>, <em><strong>D</strong></em> is the data consist of all variables. Assume that all variables are correlated, the correlation set is <strong>E</strong>*.</p><ul><li><strong>Repeat</strong><ul><li><strong>for</strong> each edges in Graph <em><strong>G</strong></em>, test the <ul><li><strong>If</strong> number of nodes in <em><strong>E</strong></em> is greater or equal <em><strong>depth + 2</strong></em> jump to <strong>NextLevel</strong>, else continue. <ul><li>Test the independence of all nodes pairs from <em><strong>E</strong></em> given condition <em><strong>depth</strong></em> count combination of other variables from <em><strong>E</strong></em>.</li><li><strong>If</strong> the independence exist, <ol><li>remove the correlation from the <em><strong>E</strong></em>.</li><li>Save the condition as the seperation of the two nodes of the edge.</li></ol></li><li><strong>End If</strong></li></ul></li><li><strong>End IF</strong></li></ul></li><li><strong>NextLevel</strong> : <span style="color:red;">set <em><strong>depth = depth + 1</strong></em></span></li></ul></li><li>Until, If number of Node in <em><strong>E</strong></em> is less then <em><strong>depth + 2</strong></em> stop, else continue Repeat.</li></ul><ol start="3"><li><strong>Finally</strong>, get the skeleton of the graph <em><strong>G</strong></em>.</li></ol><hr><p><strong>Orientating the edges</strong></p><p><strong>Input:</strong> Skeleton <em><strong>G</strong></em>, seperation sets <em><strong>S</strong></em><br><strong>Output:</strong> CPDAG <em><strong>G*</strong></em></p><hr><ul><li><strong>for</strong> all nonadjacent variables <em><strong>X</strong></em>, <em><strong>Y</strong></em> with a common neighbor <em><strong>K</strong></em> do <ul><li><strong>If</strong> <em><strong>K</strong></em> does not belongs to separation set of the two nodes <em><strong>S(X,Y)</strong></em> then<br> Replace <em><strong>X-K-J</strong></em> in <em><strong>G</strong></em> by <em><strong>X-&gt;K&lt;-Y</strong></em></li><li><strong>end</strong></li></ul></li><li><strong>end</strong></li></ul><p>Next, orient as many other undirected edges as possible using the following rules:</p><ol><li>Orient <em><strong>X-Y</strong></em> into <em><strong>X-&gt;Y</strong></em> if exists <em><strong>Z-&gt;X</strong></em>, <em><strong>Z</strong></em> and <em><strong>K</strong></em> are onadjacent.</li><li>Orient <em><strong>X-Y</strong></em> into <em><strong>X-&gt;Y</strong></em>, if exists a chain <em><strong>X-&gt;Z-&gt;Y</strong></em>.</li><li>Orient <em><strong>X-Y</strong></em> into <em><strong>X-&gt;Y</strong></em>, if exists two chains <em><strong>X-Z-&gt;Y</strong></em> and <em><strong>X-A-&gt;Y</strong></em>, nd <em><strong>Z</strong></em> and <em><strong>A</strong></em> are nonadjacent.</li></ol><p>Finally, get a CPDAG <em><strong>G*</strong></em></p><h3 id="task-2-causal-effects-ida" tabindex="-1"><a class="header-anchor" href="#task-2-causal-effects-ida"><span>Task 2: Causal Effects (IDA)</span></a></h3><ol start="2"><li><code>EBF1</code> is an important gene that is involved in many biological processes leading to cancer. <span style="color:orange;">Find the top 10 other genes</span> that have strong causal effects on <code>EBF1</code> using a <span style="color:orange;">causal inference algorithm</span>. <span style="color:red;font-weight:bold;">(4)</span><div class="hint-container info"><p class="hint-container-title">Hints</p><ul><li><span style="color:red;">Exclude the class variable</span> in building the network</li><li>If there are <span style="color:red;">multiple possible causal effects</span> between the cause and the effect, we can use the <span style="color:red;">minimum</span> of the absolute values (of the causal effects) as the final result</li><li>The causal effects are normally <span style="color:red;">ranked based on their absolute values</span>.</li></ul></div><hr><strong>Solution</strong>: Using <code>ida</code> to calculate the causal effects of all other variables on <code>EBF1</code> based on the graph built from task 1, then sort the final result base on the values come from <code>ida</code> algorithm.<div class="language-r line-numbers-mode" data-highlighter="shiki" data-ext="r" data-title="r" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Get gene EBF1 index</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EBF1_idx </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;-</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> match</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;EBF1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">names</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(data.no.class))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">CausalOnEBF1 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;-</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> data.frame</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">  causality</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> unlist</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    lapply</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)[</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EBF1_idx], </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">      function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">idx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">){</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        min</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">          abs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">            idaFast</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">              idx,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">              EBF1_idx,</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">              cov</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(data.no.class),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">              pc.fit</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">@</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">graph)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          )</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        )</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    )</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  ),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">  variable</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">  =</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> names</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(data.no.class)[</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EBF1_idx]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">CausalOnEBF1 %&gt;% </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">  arrange</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">across</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(causality, desc))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CausalOnEBF1 %&gt;% </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">  arrange</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">across</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(causality, desc)))</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">$</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">variable[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>According to the result, it could easily get the top 10 genes have strongest causal effects on <code>EBF1</code> are <code>FXYD1</code>, <code>ABCA10</code>, <code>TMEM220</code>, <code>ARHGAP20</code>, <code>FIGF</code>, <code>KLHL29</code>, <code>GPIHBP1</code>, <code>TMEM132C</code>, <code>RDH5</code>, <code>ABCA9</code>.</li></ol><h3 id="task-3-local-causal-structure-markov-blanket" tabindex="-1"><a class="header-anchor" href="#task-3-local-causal-structure-markov-blanket"><span>Task 3: Local Causal Structure &amp; Markov blanket</span></a></h3><ol start="3"><li>Use a <span style="color:orange;">local causal structure learning algorithm</span> to <span style="color:orange;">find genes in the Markov blanket of <code>ABCA9</code> from data</span>. <span style="color:orange;">Explain how the algorithm works</span>. <span style="color:red;font-weight:bold;">(4)</span></li></ol><hr><p><strong>Solution:</strong> We could use local structure learning algorithm <code>IAMB</code> to get the Markov blanket of <code>ABCA9</code> from the data</p><h4 id="_3-1-calculating-the-markov-blanket" tabindex="-1"><a class="header-anchor" href="#_3-1-calculating-the-markov-blanket"><span>3.1 Calculating the Markov Blanket</span></a></h4><div class="language-r line-numbers-mode" data-highlighter="shiki" data-ext="r" data-title="r" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">data.num </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> data %&gt;% </span><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">class)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">data.num</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">$</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">class </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;-</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> ifelse</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(data</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">$</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">class </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;C&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">ABCA9.mb </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;-</span><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;"> learn.mb</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    data.frame</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(data.num),</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;ABCA9&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">    method</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;iamb&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">    alpha</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0.01</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">ABCA9.mb</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>According to the result above, the Markov Blanket of <code>ABCA9</code> has 23 nodes.</p><h4 id="_3-2-explanation" tabindex="-1"><a class="header-anchor" href="#_3-2-explanation"><span>3.2 Explanation</span></a></h4><p>The <strong>IAMB</strong> is an abbreviation for <em><strong>Incremental Association Markov Blanket</strong></em>, the algorithm could be separated into two phases, the <em><strong>Growing pahse</strong></em> and <em><strong>Shrinking phase</strong></em>. Details for the two phases are below:<br><strong>CMI:</strong> Conditional mutual information</p><p><strong>Input:</strong> dataset <em><strong>D</strong></em>; target <em><strong>T</strong></em><br><strong>Output:</strong> <em><strong>MB(T)</strong></em></p><hr><p><strong>Growing Phase:</strong></p><ul><li><strong>Repeat</strong> till <em><strong>MB(T)</strong></em> does not change <ul><li>Find the node <em><strong>X</strong></em> from dataset <em><strong>D</strong></em> [exclude all the nodes in <em><strong>MB(T)</strong></em> and <em><strong>T</strong></em>]{style=&quot;color:red&quot;} that has the maximum <strong>CMI</strong></li><li><strong>IF</strong> <em><strong>X</strong></em> independence with <em><strong>T</strong></em> given <em><strong>MB(T)</strong></em>, Then <ul><li><span style="color:red;">Add</span> <em><strong>X</strong></em> to <em><strong>MB(T)</strong></em></li></ul></li><li><strong>End IF</strong></li></ul></li></ul><hr><p><strong>Shrinking Phase:</strong></p><ul><li><strong>For</strong> each node <em><strong>X</strong></em> from <em><strong>MB(T)</strong></em><ul><li><strong>IF</strong> <em><strong>X</strong></em> independence with <em><strong>T</strong></em> given <em><strong>MB(T)</strong></em> [exclude]{style=&quot;color:red&quot;} <em><strong>X</strong></em>, <strong>Then</strong><ul><li><span style="color:red;">Remove</span> <em><strong>X</strong></em> from <em><strong>MB(T)</strong></em></li></ul></li><li><strong>End IF</strong></li></ul></li><li><strong>End For</strong></li></ul><p>Finally, get the final <em><strong>MB(T)</strong></em>.</p><hr><h4 id="references" tabindex="-1"><a class="header-anchor" href="#references"><span>References</span></a></h4><p>[01]. <a href="http://www.jcomputers.us/vol5/jcp0511-18.pdf" target="_blank" rel="noopener noreferrer">An Improved IAMB Algorithm for Markov Blanket Discovery</a></p><p>[02]. <a href="https://cseweb.ucsd.edu//~elkan/254/Verma.pdf" target="_blank" rel="noopener noreferrer">Discovering Markov Blankets: Finding Independencies Among Variables</a></p><h3 id="task-4-discrete-the-dataset" tabindex="-1"><a class="header-anchor" href="#task-4-discrete-the-dataset"><span>Task 4: Discrete the dataset</span></a></h3><ol start="4"><li><span style="color:orange;">Discretise</span> the dataset to binary using the <span style="color:orange;">average expression of ALL genes as the threshold</span>. The discretised dataset will be used in the following questions.</li></ol>`,57)),i("p",null,[s[6]||(s[6]=i("strong",null,"Solution:",-1)),s[7]||(s[7]=i("br",null,null,-1)),s[8]||(s[8]=i("strong",null,"Step 1",-1)),s[9]||(s[9]=a(": Calculating the mean")),s[10]||(s[10]=i("br",null,null,-1)),s[11]||(s[11]=i("strong",null,"Step 2",-1)),s[12]||(s[12]=a(": Discrete the data (1: ")),i("mjx-container",c,[(n(),e("svg",g,s[2]||(s[2]=[i("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[i("g",{"data-mml-node":"math"},[i("g",{"data-mml-node":"mo"},[i("path",{"data-c":"3E",d:"M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z"})])])],-1)]))),s[3]||(s[3]=i("mjx-assistive-mml",{unselectable:"on",display:"inline"},[i("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[i("mo",null,">")])],-1))]),s[13]||(s[13]=a(" mean 0: ")),i("mjx-container",m,[(n(),e("svg",u,s[4]||(s[4]=[i("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[i("g",{"data-mml-node":"math"},[i("g",{"data-mml-node":"mo"},[i("path",{"data-c":"3C",d:"M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z"})])])],-1)]))),s[5]||(s[5]=i("mjx-assistive-mml",{unselectable:"on",display:"inline"},[i("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[i("mo",null,"<")])],-1))]),s[14]||(s[14]=a(" mean)"))]),s[18]||(s[18]=r(`<p>Because of the <code>pcSelect</code> method <span style="color:red;">only support numeric variables</span>, so the discrete variables need to be <span style="color:red;">replaced with 1 and 0 according to <strong>step 2</strong></span>.</p><div class="language-r line-numbers-mode" data-highlighter="shiki" data-ext="r" data-title="r" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># The mean of each gene</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># mean.val &lt;- as.data.frame(apply(data.no.class, 2, mean))</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># The mean of All genes</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">mean.val </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;-</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> mean</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">apply</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(data.no.class, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, mean))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">names </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;-</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> colnames</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(data.no.class)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">data.binary </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;-</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> as.data.frame</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">  sapply</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    colnames</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(data.no.class), </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">ifelse</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(data.no.class[,x] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">mean.val, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">data.binary</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">$</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">class </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;-</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> ifelse</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(data</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">$</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">class </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;C&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#data.binary.c &lt;- as.data.frame(</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#  sapply(</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#    colnames(data.no.class), </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#    function(x) ifelse(data.no.class[,x] &gt;mean.val, &#39;T&#39;, &#39;F&#39;)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#))</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#data.binary.c$class &lt;- ifelse(data$class == &#39;C&#39;, &#39;T&#39;, &#39;F&#39;)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="task-5-pc-simple" tabindex="-1"><a class="header-anchor" href="#task-5-pc-simple"><span>Task 5: PC-Simple</span></a></h3><ol start="5"><li>Use <span style="color:orange;">PC-simple algorithm (pcSelect)</span> to <span style="color:orange;">find the parent and children</span> set of the class variable. <span style="color:orange;">Explain how PC-simple works</span>. <ul><li>Evaluate the accuracy of the Naïve Bayes classification on the dataset in the following cases: <ol><li>Use all features (genes) in the dataset</li><li>Use only the features (genes) in the parent and children set of the class variable</li></ol></li><li>Compare the accuracy of the models in the two cases using 10-fold cross validation. <span style="color:red;font-weight:bold;">(6)</span></li></ul></li></ol><p><strong>References:</strong></p><ol><li><a href="http://www.jcomputers.us/vol5/jcp0511-18.pdf" target="_blank" rel="noopener noreferrer">An Improved IAMB Algorithm for Markov Blanket Discovery</a></li><li><a href="https://cseweb.ucsd.edu//~elkan/254/Verma.pdf" target="_blank" rel="noopener noreferrer">Discovering Markov Blankets: Finding Independencies Among Variables</a></li></ol><h4 id="_5-1-find-the-parents-and-children" tabindex="-1"><a class="header-anchor" href="#_5-1-find-the-parents-and-children"><span>5.1 Find the parents and children</span></a></h4><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>class.pc &lt;- pcSelect(</span></span>
<span class="line"><span>  data.binary %&gt;% select(class),</span></span>
<span class="line"><span>  data.binary %&gt;% select(-class),</span></span>
<span class="line"><span>  alpha = 0.01</span></span>
<span class="line"><span>)</span></span>
<span class="line"><span>class.pc &lt;- data.frame(ispc = class.pc$G, zmin = class.pc$zMin)</span></span>
<span class="line"><span>class.pc[order(class.pc$zmin, decreasing=TRUE),]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>rownames(class.pc[class.pc$ispc == TRUE,])</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>According to the result above, it could easily found that the parents and children of <code>class</code> variable are <code>FIGF</code>, <code>ARHGAP20</code>, <code>CD300LG</code>, <code>KLHL29</code>, <code>CXCL2</code>, <code>ATP1A2</code>, <code>MAMDC2</code>, <code>TMEM220</code>, <code>SCARA5</code>, <code>ATOH8</code>.</p><h4 id="_5-2-explanation-of-pc-simple" tabindex="-1"><a class="header-anchor" href="#_5-2-explanation-of-pc-simple"><span>5.2 Explanation of PC-Simple</span></a></h4><p>PC-Simple is an algorithm to find the parents and children of a target node via conditional independence tests base on a threshold <em><strong>alpha</strong></em>,</p><p><strong>Input:</strong> Dataset <em><strong>D</strong></em> consist of set of predictor variables <em><strong>X</strong></em> and target variable <em><strong>Z</strong></em>; a significant levle <em><strong>alpha</strong></em> for conditional independence test.<br><strong>Output:</strong> The parents and children set <em><strong>PC</strong></em> of target <em><strong>Z</strong></em></p><p><strong>For</strong> this case, the <em><strong>alpha</strong></em> has been set <em><strong>0.01</strong></em>, <em><strong>k = 0</strong></em> , <em><strong>PC(k)</strong></em> equals all other variables.</p><ul><li><strong>Repeat</strong> if count of <em><strong>PC</strong></em> is greater than <em><strong>k</strong></em><ul><li><em><strong>k = k+1</strong></em></li><li><em><strong>PC(k) = PC(k-1)</strong></em></li><li><strong>For</strong> each node <em><strong>X</strong></em> from <em><strong>PC(k-1)</strong></em><ul><li><strong>For</strong> each combination nodes <em><strong>S</strong></em> from <em><strong>PC(k-1)</strong></em> excludes <em><strong>X</strong></em> and count of <em><strong>S</strong></em> equals <em><strong>k-1</strong></em><ul><li><strong>IF</strong> <em><strong>X</strong></em> and <em><strong>Z</strong></em> are independent given <em><strong>S</strong></em> at significance level <em><strong>alpha</strong></em>, Then <ul><li>remove <em><strong>X</strong></em> from <em><strong>PC(K)</strong></em></li></ul></li><li><strong>End IF</strong></li></ul></li><li><strong>End For</strong></li></ul></li><li><em><strong>End For</strong></em></li></ul></li></ul><p>The <em><strong>PC</strong></em> is the final result.</p><h4 id="_5-3-naive-bayes-classification" tabindex="-1"><a class="header-anchor" href="#_5-3-naive-bayes-classification"><span>5.3 Naïve Bayes classification</span></a></h4><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>library(caret)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h5 id="_5-3-1-naive-bayes-classification-with-all-features" tabindex="-1"><a class="header-anchor" href="#_5-3-1-naive-bayes-classification-with-all-features"><span>5.3.1 Naive Bayes classification with all features</span></a></h5><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>set.seed(100)</span></span>
<span class="line"><span>trctrl &lt;- trainControl(method = &quot;cv&quot;, number = 10, savePredictions=TRUE)</span></span>
<span class="line"><span>nb_all &lt;- train(</span></span>
<span class="line"><span>  factor(class) ~., </span></span>
<span class="line"><span>  data = data.binary, </span></span>
<span class="line"><span>  method = &quot;naive_bayes&quot;, </span></span>
<span class="line"><span>  trControl=trctrl, </span></span>
<span class="line"><span>  tuneLength = 0</span></span>
<span class="line"><span>)</span></span>
<span class="line"><span>nb_all</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_5-3-2-naive-bayes-classification-with-related-features" tabindex="-1"><a class="header-anchor" href="#_5-3-2-naive-bayes-classification-with-related-features"><span>5.3.2 Naive Bayes classification with related features</span></a></h5><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>data.binary.related &lt;- data.binary[,append(rownames(class.pc[class.pc$ispc == TRUE,]), &quot;class&quot;)]</span></span>
<span class="line"><span>nb_pc &lt;- train(</span></span>
<span class="line"><span>  factor(class) ~., </span></span>
<span class="line"><span>  data = data.binary.related, </span></span>
<span class="line"><span>  method = &quot;naive_bayes&quot;, </span></span>
<span class="line"><span>  trControl=trctrl, </span></span>
<span class="line"><span>  tuneLength = 0</span></span>
<span class="line"><span>)</span></span>
<span class="line"><span>nb_pc</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_5-3-3-comparision-between-the-two-models" tabindex="-1"><a class="header-anchor" href="#_5-3-3-comparision-between-the-two-models"><span>5.3.3 Comparision between the two models</span></a></h5><div class="language-r line-numbers-mode" data-highlighter="shiki" data-ext="r" data-title="r" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">confusionMatrix</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(nb_all)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">confusionMatrix</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(nb_pc)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>According to the confusion matrix, we could get indicators table like below.</p><table><thead><tr><th>indicators</th><th><em><strong>ma</strong></em></th><th><em><strong>mr</strong></em></th></tr></thead><tbody><tr><td><strong>accuracy</strong></td><td>0.9761</td><td><span style="color:red;">0.9843</span></td></tr><tr><td><strong>precision(1)</strong> : cancer</td><td><span style="color:red;">0.9982</span></td><td>0.9809</td></tr><tr><td><strong>precision(0)</strong>: normal</td><td>0.7589</td><td><span style="color:red;">1</span></td></tr><tr><td><strong>recall(1)</strong>: cancer</td><td>0.9760</td><td><span style="color:red;">1</span></td></tr><tr><td><strong>recall(0)</strong>: normal</td><td><span style="color:red;">0.9770</span></td><td>0.8421</td></tr></tbody></table><p>The precision stands for the accuracy of prediction cases, the recall represents the accuracy of actual cases that has been recognized. According to the table above, the overall accuracy of <em><strong>mr</strong></em> is better than <em><strong>ma</strong></em>. For cancer cases, the <em><strong>ma</strong></em> perform better than <em><strong>mr</strong></em> on prediction, but for recall value of <em><strong>mr</strong></em> is better than <em><strong>ma</strong></em>. For normal cases, the <em><strong>mr</strong></em> works better than <em><strong>ma</strong></em> on precision, but the <em><strong>ma</strong></em> perform better on recall than <em><strong>mr</strong></em>.</p><h3 id="task-6-calculating-based-on-specified-dag" tabindex="-1"><a class="header-anchor" href="#task-6-calculating-based-on-specified-dag"><span>Task 6: Calculating based on specified DAG</span></a></h3><ol start="6"><li>Given a Bayesian network as in the below figure<br><img src="`+h+`" alt="" loading="lazy"></li></ol><h4 id="_6-1-a-construct-the-conditional-probability-tables-for-the-bayesian-network-based-on-data-3" tabindex="-1"><a class="header-anchor" href="#_6-1-a-construct-the-conditional-probability-tables-for-the-bayesian-network-based-on-data-3"><span>6.1 a) <span style="color:orange;">Construct the conditional probability tables</span> for the Bayesian network based on data. <span style="color:red;font-weight:bold;">(3)</span></span></a></h4><h5 id="_6-1-1-construct-using-grain" tabindex="-1"><a class="header-anchor" href="#_6-1-1-construct-using-grain"><span>6.1.1 Construct using <code>gRain</code></span></a></h5><p>For constructing the net, using the <em><strong>T</strong></em> instead of <em><strong>1</strong></em> and using <em><strong>F</strong></em> instead of <em><strong>0</strong></em>.</p><div class="language-r line-numbers-mode" data-highlighter="shiki" data-ext="r" data-title="r" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">data.graph </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> data.binary %&gt;% </span><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(BTNL9,CD300LG,class,IGSF10,ABCA9)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">yn </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;-</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;T&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;F&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">B     </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;-</span><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;"> cptable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">~</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">BTNL9, </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">                 values</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (data.graph %&gt;% </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">                            select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(BTNL9) %&gt;%</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">                            group_by</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(BTNL9) %&gt;%</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">                            count</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() %&gt;%</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">                            arrange</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">across</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(BTNL9, desc)))</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">$</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">n,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">                 levels</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">yn)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">CD.B  </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;-</span><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;"> cptable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">~</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">CD300LG</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">BTNL9, </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">                 values</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(data.graph %&gt;% </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">                            select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CD300LG, BTNL9) %&gt;%</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">                            group_by</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CD300LG, BTNL9) %&gt;%</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">                            count</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() %&gt;%</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">                            arrange</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">across</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(BTNL9, desc),</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">                                    across</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CD300LG, desc)))</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">$</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">n,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">                 levels</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">yn)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">c.CD  </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;-</span><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;"> cptable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">~</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">class</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">CD300LG, </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">                 values</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(data.graph %&gt;% </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">                            select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(class, CD300LG) %&gt;%</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">                            group_by</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(class, CD300LG) %&gt;%</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">                            count</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() %&gt;%</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">                            arrange</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">across</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CD300LG, desc),</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">                                    across</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(class, desc)))</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">$</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">n, </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">                 levels</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">yn)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">I.c   </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;-</span><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;"> cptable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">~</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">IGSF10</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">class, </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">                 values</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(data.graph %&gt;% </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">                            select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(IGSF10, class) %&gt;%</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">                            group_by</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(IGSF10, class) %&gt;%</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">                            count</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() %&gt;%</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">                            arrange</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">across</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(class, desc), </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">                                    across</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(IGSF10, desc)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                                    ))</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">$</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">n, </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">                 levels</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">yn)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">AB.B_I</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;-</span><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;"> cptable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">~</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">ABCA9</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">BTNL9</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">IGSF10,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">                 values</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(data.graph %&gt;% </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">                            select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(ABCA9, BTNL9,IGSF10) %&gt;%</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">                            group_by</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(ABCA9, BTNL9,IGSF10) %&gt;%</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">                            count</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() %&gt;%</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">                            arrange</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">( </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">                              across</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(IGSF10, desc), </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">                              across</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(BTNL9, desc),</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">                              across</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(ABCA9, desc)))</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">$</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">n,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">                 levels</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">yn)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">plist </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;-</span><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;"> compileCPT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(B, CD.B, c.CD, I.c, AB.B_I))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">plist</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">net</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">grain</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(plist) </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">plot</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(net</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">$</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">dag)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_6-1-2-construct-using-bnlearn" tabindex="-1"><a class="header-anchor" href="#_6-1-2-construct-using-bnlearn"><span>6.1.2 Construct using <code>bnlearn</code></span></a></h5><blockquote></blockquote><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>bn.dag = model2network(&quot;[BTNL9][CD300LG|BTNL9][ABCA9|BTNL9:IGSF10][class|CD300LG][IGSF10|class]&quot;)</span></span>
<span class="line"><span>graphviz.plot(bn.dag)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>learn parameters from data</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>bn.fitted &lt;- bn.fit(</span></span>
<span class="line"><span>  bn.dag,</span></span>
<span class="line"><span>  data.binary %&gt;% select(BTNL9, CD300LG, class, IGSF10, ABCA9)</span></span>
<span class="line"><span>)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_6-2-b-estimate-the-probability-of-the-four-genes-in-the-network-having-high-expression-levels-2" tabindex="-1"><a class="header-anchor" href="#_6-2-b-estimate-the-probability-of-the-four-genes-in-the-network-having-high-expression-levels-2"><span>6.2 b) <span style="color:orange;">Estimate the probability of the four genes</span> in the network having high expression levels. <span style="color:red;font-weight:bold;">(2)</span></span></a></h4><p>This question aims to calculate the <em><strong>joint probability</strong></em> of the four genes in the network for each value of the four variables equal <em><strong>T</strong></em>. It could be expressed with the formula <em><strong>P(BTNL9=T, CD300LG=T, IGSF10=T, ABCA9=T)</strong></em>.</p><h5 id="_6-2-1-method-1" tabindex="-1"><a class="header-anchor" href="#_6-2-1-method-1"><span>6.2.1 Method 1</span></a></h5><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>querygrain(net, nodes=c(&quot;BTNL9&quot;, &quot;CD300LG&quot;, &quot;IGSF10&quot;, &quot;ABCA9&quot;), type=&quot;joint&quot;)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>According to the table above, it could get the <em><strong>P(BTNL9=T, CD300LG=T, IGSF10=T, ABCA9=T)=<span style="color:red;">0.073736</span></strong></em></p><h5 id="_6-2-2-method-2" tabindex="-1"><a class="header-anchor" href="#_6-2-2-method-2"><span>6.2.2 Method 2</span></a></h5><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>joint_pb &lt;- setEvidence(</span></span>
<span class="line"><span>  net, </span></span>
<span class="line"><span>  evidence=list(BTNL9=&quot;T&quot;, CD300LG=&quot;T&quot;,  IGSF10=&quot;T&quot;, ABCA9=&quot;T&quot;)</span></span>
<span class="line"><span>)</span></span>
<span class="line"><span>pEvidence(joint_pb)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>According to the table above, it could get the same result with method 1.</p><h4 id="_6-3-c-estimate-the-probability-of-having-cancer-when-the-expression-level-of-cd300lg-is-high-and-the-expression-level-of-btnl9-is-low-2" tabindex="-1"><a class="header-anchor" href="#_6-3-c-estimate-the-probability-of-having-cancer-when-the-expression-level-of-cd300lg-is-high-and-the-expression-level-of-btnl9-is-low-2"><span>6.3 c) <span style="color:orange;">Estimate the probability of having cancer</span> when the expression level of <code>CD300LG</code> is high and the expression level of <code>BTNL9</code> is low. <span style="color:red;font-weight:bold;">(2)</span></span></a></h4><blockquote><p>This question actually ask us to calculate the conditional probability <em><strong>P(class=T| CD300LG=T, BTNL9=F)</strong></em>, here I will use <code>cpquery</code> method for get the conditional probability.</p></blockquote><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>querygrain(net, nodes=c(&quot;class&quot;,&quot;CD300LG&quot;,&quot;BTNL9&quot;), type=&quot;conditional&quot;)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>So the final result <em><strong>P(class=T|CD300LG=T,BTNL9=F)</strong></em> = <span style="color:red;"><em><strong>0.2585034</strong></em></span></p><h4 id="_6-4-d-prove-the-result-in-c-mathematically-2" tabindex="-1"><a class="header-anchor" href="#_6-4-d-prove-the-result-in-c-mathematically-2"><span>6.4 d) <span style="color:orange;">Prove the result in c) mathematically</span>. <span style="color:red;font-weight:bold;">(2)</span></span></a></h4><div class="language-r line-numbers-mode" data-highlighter="shiki" data-ext="r" data-title="r" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">data.graph %&gt;% </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">  select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(class, CD300LG,BTNL9) %&gt;%</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">  group_by</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(class, CD300LG,BTNL9) %&gt;%</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">  count</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() %&gt;%</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">  arrange</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">( </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">    across</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(class, desc), </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">    across</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CD300LG, desc),</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">    across</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(BTNL9, desc))</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#plot(net$dag)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>According to the graph, <code>BTNL9</code> is the parent of <code>CD300LG</code>, so</p><p><em><strong>P(class=T| BTNL9=F,CD300LG=T)</strong></em><br><em><strong>= P(class=T|CD300LG=T)</strong></em><br><em><strong>= (32+6)/(32+107+6+2)</strong></em><br> = <span style="color:red;"><em><strong>0.2585034</strong></em></span></p><h4 id="_6-5-e-given-we-know-the-value-of-cd300lg-is-the-class-conditionally-independent-of-abca9-and-why-3" tabindex="-1"><a class="header-anchor" href="#_6-5-e-given-we-know-the-value-of-cd300lg-is-the-class-conditionally-independent-of-abca9-and-why-3"><span>6.5 e) Given we know the value of <code>CD300LG</code>, is the “class” <span style="color:orange;">conditionally independent</span> of <code>ABCA9</code>? And why? <span style="color:red;font-weight:bold;">(3)</span></span></a></h4><p><strong>Anwser:</strong> <span style="color:red;"><strong>No</strong></span></p><p><strong>Explanation:</strong> According to Markov condition, every node in a Bayesian network is conditionally independent of its nondescendants, given its parents. So the parent <code>CD300LG</code> of <code>class</code> is given, <code>ABCA9</code> is the descendant of <code>class</code> variable, so the <code>class</code> is not conditionally independent of <code>ABCA9</code>.</p><hr><p><a href="/data/unisa/AdvancedAnalytic2/project/Project.Rmd">Download RMD</a><br><a href="https://colab.research.google.com/drive/13V7I9g8k69c61NJzuwc80PwrOwM-Dz-0?usp=sharing" target="_blank" rel="noopener noreferrer">online code</a></p><h2 id="references-1" tabindex="-1"><a class="header-anchor" href="#references-1"><span>References</span></a></h2><p>Algorithm:<br><a href="http://www.sci-princess.info/wp-content/uploads/Causal-Graphs-and-the-PC-Algorithm.pdf" target="_blank" rel="noopener noreferrer">http://www.sci-princess.info/wp-content/uploads/Causal-Graphs-and-the-PC-Algorithm.pdf</a><br><a href="https://pooyanjamshidi.github.io/csce580/lectures/CSCE580-GuestLecture%E2%80%93BNLearning.pdf" target="_blank" rel="noopener noreferrer">https://pooyanjamshidi.github.io/csce580/lectures/CSCE580-GuestLecture--BNLearning.pdf</a><br><a href="https://arxiv.org/pdf/0908.3817.pdf" target="_blank" rel="noopener noreferrer">https://arxiv.org/pdf/0908.3817.pdf</a><br><a href="https://www.bnlearn.com/about/slides/slides-useRconf13.pdf" target="_blank" rel="noopener noreferrer">https://www.bnlearn.com/about/slides/slides-useRconf13.pdf</a></p><p>pcalg:<br><a href="https://stat.ethz.ch/Manuscripts/buhlmann/pcalg-software.pdf" target="_blank" rel="noopener noreferrer">https://stat.ethz.ch/Manuscripts/buhlmann/pcalg-software.pdf</a><br><a href="https://cran.r-project.org/web/packages/pcalg/pcalg.pdf" target="_blank" rel="noopener noreferrer">https://cran.r-project.org/web/packages/pcalg/pcalg.pdf</a><br><a href="https://cran.r-project.org/web/packages/pcalg/vignettes/vignette2018.pdf" target="_blank" rel="noopener noreferrer">https://cran.r-project.org/web/packages/pcalg/vignettes/vignette2018.pdf</a></p><p>bnlearn:<br><a href="https://www.bnlearn.com/examples/graphviz-plot/" target="_blank" rel="noopener noreferrer">https://www.bnlearn.com/examples/graphviz-plot/</a><br><a href="https://www.bnlearn.com/documentation/man/cpquery.html" target="_blank" rel="noopener noreferrer">https://www.bnlearn.com/documentation/man/cpquery.html</a><br><a href="https://rdrr.io/github/vspinu/bnlearn/man/cpquery.html" target="_blank" rel="noopener noreferrer">https://rdrr.io/github/vspinu/bnlearn/man/cpquery.html</a><br><a href="https://dipartimenti.unicatt.it/scienze-statistiche-23-25-1-17ScutariSlides.pdf" target="_blank" rel="noopener noreferrer">https://dipartimenti.unicatt.it/scienze-statistiche-23-25-1-17ScutariSlides.pdf</a></p><p>Graphviz<br><a href="https://rdrr.io/bioc/Rgraphviz/man/GraphvizAttributes.html#:~:text=Font%20size%2C%20in%20points%2C%20for,Label%20for%20the%20graph." target="_blank" rel="noopener noreferrer">https://rdrr.io/bioc/Rgraphviz/man/GraphvizAttributes.html#:~:text=Font size%2C in points%2C for,Label for the graph.</a><br><a href="https://www.cs.cmu.edu/afs/cs/project/jair/pub/volume18/acid03a-html/node2.html" target="_blank" rel="noopener noreferrer">https://www.cs.cmu.edu/afs/cs/project/jair/pub/volume18/acid03a-html/node2.html</a></p><p>Chinese Sample:<br><a href="https://www.cnblogs.com/payton/articles/4608383.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/payton/articles/4608383.html</a></p>`,64))])}const f=p(d,[["render",A],["__file","project.html.vue"]]),F=JSON.parse(`{"path":"/study/unisa/2023SP5/AdvancedAnalyticTechniques2/project.html","title":"Project","lang":"en-US","frontmatter":{"title":"Project","index":false,"icon":"/assets/icon/common/flags.svg","icon-size":"4rem","author":"Haiyue","date":"2023-08-25T00:00:00.000Z","category":["Assignment"],"description":"Requirements Instructions Instructions Dataset BRCA-50 is a Breast cancer dataset, including the expression levels of 50 important genes in Breast cancer. The dataset includes 1...","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://jet-w.github.io/study/unisa/2023SP5/AdvancedAnalyticTechniques2/project.html"}],["meta",{"property":"og:site_name","content":"Haiyue's Blog"}],["meta",{"property":"og:title","content":"Project"}],["meta",{"property":"og:description","content":"Requirements Instructions Instructions Dataset BRCA-50 is a Breast cancer dataset, including the expression levels of 50 important genes in Breast cancer. The dataset includes 1..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://jet-w.github.io/data/unisa/AdvancedAnalytic2/project/BayesianNetwork.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:author","content":"Haiyue"}],["meta",{"property":"article:published_time","content":"2023-08-25T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Project\\",\\"image\\":[\\"https://jet-w.github.io/data/unisa/AdvancedAnalytic2/project/BayesianNetwork.png\\"],\\"datePublished\\":\\"2023-08-25T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Haiyue\\"}]}"]]},"headers":[{"level":2,"title":"Requirements","slug":"requirements","link":"#requirements","children":[]},{"level":2,"title":"Instructions","slug":"instructions","link":"#instructions","children":[]},{"level":2,"title":"Dataset","slug":"dataset","link":"#dataset","children":[]},{"level":2,"title":"Tasks","slug":"tasks","link":"#tasks","children":[{"level":3,"title":"Load library","slug":"load-library","link":"#load-library","children":[]},{"level":3,"title":"Load data","slug":"load-data","link":"#load-data","children":[]},{"level":3,"title":"Task 1: Causal Structure (CPDAG)","slug":"task-1-causal-structure-cpdag","link":"#task-1-causal-structure-cpdag","children":[{"level":4,"title":"1.1 Learn the structure","slug":"_1-1-learn-the-structure","link":"#_1-1-learn-the-structure","children":[]},{"level":4,"title":"1.2 Explain how the algorithm works","slug":"_1-2-explain-how-the-algorithm-works","link":"#_1-2-explain-how-the-algorithm-works","children":[]}]},{"level":3,"title":"Task 2: Causal Effects (IDA)","slug":"task-2-causal-effects-ida","link":"#task-2-causal-effects-ida","children":[]},{"level":3,"title":"Task 3: Local Causal Structure & Markov blanket","slug":"task-3-local-causal-structure-markov-blanket","link":"#task-3-local-causal-structure-markov-blanket","children":[{"level":4,"title":"3.1 Calculating the Markov Blanket","slug":"_3-1-calculating-the-markov-blanket","link":"#_3-1-calculating-the-markov-blanket","children":[]},{"level":4,"title":"3.2 Explanation","slug":"_3-2-explanation","link":"#_3-2-explanation","children":[]},{"level":4,"title":"References","slug":"references","link":"#references","children":[]}]},{"level":3,"title":"Task 4: Discrete the dataset","slug":"task-4-discrete-the-dataset","link":"#task-4-discrete-the-dataset","children":[]},{"level":3,"title":"Task 5: PC-Simple","slug":"task-5-pc-simple","link":"#task-5-pc-simple","children":[{"level":4,"title":"5.1 Find the parents and children","slug":"_5-1-find-the-parents-and-children","link":"#_5-1-find-the-parents-and-children","children":[]},{"level":4,"title":"5.2 Explanation of PC-Simple","slug":"_5-2-explanation-of-pc-simple","link":"#_5-2-explanation-of-pc-simple","children":[]},{"level":4,"title":"5.3 Naïve Bayes classification","slug":"_5-3-naive-bayes-classification","link":"#_5-3-naive-bayes-classification","children":[]}]},{"level":3,"title":"Task 6: Calculating based on specified DAG","slug":"task-6-calculating-based-on-specified-dag","link":"#task-6-calculating-based-on-specified-dag","children":[{"level":4,"title":"6.1 a) Construct the conditional probability tables for the Bayesian network based on data. (3)","slug":"_6-1-a-construct-the-conditional-probability-tables-for-the-bayesian-network-based-on-data-3","link":"#_6-1-a-construct-the-conditional-probability-tables-for-the-bayesian-network-based-on-data-3","children":[]},{"level":4,"title":"6.2 b) Estimate the probability of the four genes in the network having high expression levels. (2)","slug":"_6-2-b-estimate-the-probability-of-the-four-genes-in-the-network-having-high-expression-levels-2","link":"#_6-2-b-estimate-the-probability-of-the-four-genes-in-the-network-having-high-expression-levels-2","children":[]},{"level":4,"title":"6.3 c) Estimate the probability of having cancer when the expression level of CD300LG is high and the expression level of BTNL9 is low. (2)","slug":"_6-3-c-estimate-the-probability-of-having-cancer-when-the-expression-level-of-cd300lg-is-high-and-the-expression-level-of-btnl9-is-low-2","link":"#_6-3-c-estimate-the-probability-of-having-cancer-when-the-expression-level-of-cd300lg-is-high-and-the-expression-level-of-btnl9-is-low-2","children":[]},{"level":4,"title":"6.4 d) Prove the result in c) mathematically. (2)","slug":"_6-4-d-prove-the-result-in-c-mathematically-2","link":"#_6-4-d-prove-the-result-in-c-mathematically-2","children":[]},{"level":4,"title":"6.5 e) Given we know the value of CD300LG, is the “class” conditionally independent of ABCA9? And why? (3)","slug":"_6-5-e-given-we-know-the-value-of-cd300lg-is-the-class-conditionally-independent-of-abca9-and-why-3","link":"#_6-5-e-given-we-know-the-value-of-cd300lg-is-the-class-conditionally-independent-of-abca9-and-why-3","children":[]}]}]},{"level":2,"title":"References","slug":"references-1","link":"#references-1","children":[]}],"readingTime":{"minutes":8.67,"words":2602},"filePathRelative":"study/unisa/2023SP5/AdvancedAnalyticTechniques2/project.md","localizedDate":"August 25, 2023","excerpt":"<h2>Requirements</h2>\\n<h2>Instructions</h2>\\n<details class=\\"hint-container details\\"><summary>Instructions</summary>\\n</details>\\n<h2>Dataset</h2>\\n<p><code>BRCA-50</code> is a Breast cancer dataset, including the expression levels of 50 important genes in Breast cancer.</p>\\n<ol>\\n<li>The dataset includes <span style=\\"color:orange\\">1212 samples</span> with</li>\\n<li><span style=\\"color:orange\\">112 samples</span> are of <span style=\\"color:orange\\">normal cases (class = N)</span> and</li>\\n<li><span style=\\"color:orange\\">1100 samples</span> are of <span style=\\"color:orange\\">cancer patients (class = C)</span>.</li>\\n</ol>","autoDesc":true}`);export{f as comp,F as data};

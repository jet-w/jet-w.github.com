import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,d as n,o as a}from"./app-BoSEJaB0.js";const t={};function r(l,i){return a(),s("div",null,i[0]||(i[0]=[n(`<h2 id="port-mapping" tabindex="-1"><a class="header-anchor" href="#port-mapping"><span>Port Mapping</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -P</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> training/webapp</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> python</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app.py</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 5000:5000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> training/webapp</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> python</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app.py</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">Interpretation</p><ul><li>-P: map to a random local port</li><li>-p: map to a specific local port</li></ul></div><h2 id="view-port-mapping" tabindex="-1"><a class="header-anchor" href="#view-port-mapping"><span>View Port Mapping</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">containe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">r&gt; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5000</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="containers-connection" tabindex="-1"><a class="header-anchor" href="#containers-connection"><span>Containers Connection</span></a></h2><h3 id="create-network" tabindex="-1"><a class="header-anchor" href="#create-network"><span>Create network</span></a></h3><p><code>docker network create -d bridge test-net</code></p><div class="hint-container info"><p class="hint-container-title">Interpretation</p><ul><li>-d: specify the net type (bridge/overlay)</li></ul></div><h3 id="connect-container" tabindex="-1"><a class="header-anchor" href="#connect-container"><span>Connect Container</span></a></h3><p>Run a new container and connect to network test-net</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -itd</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --network</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test-net</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ubuntu</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /bin/bash</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -itd</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --network</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test-net</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ubuntu</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /bin/bash</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Now the test1 and test2 can connect each other.</p><h2 id="config-dns" tabindex="-1"><a class="header-anchor" href="#config-dns"><span>Config DNS</span></a></h2><p>Add configuration to <code>/etc/docker/daemon.json</code> .</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;dns&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;114.114.114.114&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;8.8.8.8&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  ]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Using the follow command to view the DNS info<br><code>docker run -it --rm ubuntu cat etc/resolv.conf</code></p><h3 id="specify-dns-for-container" tabindex="-1"><a class="header-anchor" href="#specify-dns-for-container"><span>Specify DNS for container</span></a></h3><p><code>docker run -it --rm -h host_ubuntu --dns=114.114.114.114 --dns-search=test.com ubuntu</code></p><div class="hint-container info"><p class="hint-container-title">Interpretation</p><ul><li>--rm: The file system will clean up when exit a container</li><li>-h Hostname: set the container system name, the name can be write to <code>/etc/hostname</code> and <code>/etc/hosts</code>.</li><li>--dns=IP_ADDRESS: add dns to <code>/etc/resolv.conf</code></li><li>--dns-search=DOMAIN: set the container search domain.</li></ul></div><h2 id="reference" tabindex="-1"><a class="header-anchor" href="#reference"><span>Reference</span></a></h2><p><a href="https://www.runoob.com/docker/docker-container-connection.html" target="_blank" rel="noopener noreferrer">Tutoriaspoint</a></p>`,22)]))}const p=e(t,[["render",r],["__file","03.ConnectionOfContainers.html.vue"]]),d=JSON.parse(`{"path":"/techniques/Tools/docker/03.ConnectionOfContainers.html","title":"03. Containers Connection","lang":"en-US","frontmatter":{"title":"03. Containers Connection","date":"2024-07-09T00:00:00.000Z","icon":"circle-dot","author":"Haiyue","category":["docker"],"tag":["docker"],"star":true,"sticky":true,"description":"Port Mapping Interpretation -P: map to a random local port -p: map to a specific local port View Port Mapping Containers Connection Create network docker network create -d bridg...","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://jet-w.github.io/techniques/Tools/docker/03.ConnectionOfContainers.html"}],["meta",{"property":"og:site_name","content":"Haiyue's Blog"}],["meta",{"property":"og:title","content":"03. Containers Connection"}],["meta",{"property":"og:description","content":"Port Mapping Interpretation -P: map to a random local port -p: map to a specific local port View Port Mapping Containers Connection Create network docker network create -d bridg..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:author","content":"Haiyue"}],["meta",{"property":"article:tag","content":"docker"}],["meta",{"property":"article:published_time","content":"2024-07-09T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"03. Containers Connection\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-07-09T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Haiyue\\"}]}"]]},"headers":[{"level":2,"title":"Port Mapping","slug":"port-mapping","link":"#port-mapping","children":[]},{"level":2,"title":"View Port Mapping","slug":"view-port-mapping","link":"#view-port-mapping","children":[]},{"level":2,"title":"Containers Connection","slug":"containers-connection","link":"#containers-connection","children":[{"level":3,"title":"Create network","slug":"create-network","link":"#create-network","children":[]},{"level":3,"title":"Connect Container","slug":"connect-container","link":"#connect-container","children":[]}]},{"level":2,"title":"Config DNS","slug":"config-dns","link":"#config-dns","children":[{"level":3,"title":"Specify DNS for container","slug":"specify-dns-for-container","link":"#specify-dns-for-container","children":[]}]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"readingTime":{"minutes":0.73,"words":220},"filePathRelative":"techniques/Tools/docker/03.ConnectionOfContainers.md","localizedDate":"July 9, 2024","excerpt":"<h2>Port Mapping</h2>\\n<div class=\\"language-bash line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"bash\\" data-title=\\"bash\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">docker</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> run</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -d</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -P</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> training/webapp</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> python</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> app.py</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">docker</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> run</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -d</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -p</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 5000:5000</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> training/webapp</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> python</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> app.py</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{p as comp,d as data};

import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as d,c as u,e as i,w as s,b as a,d as e,f as r}from"./app-6ea22bb9.js";const m={},b=r(`<h2 id="how-to-get-help" tabindex="-1"><a class="header-anchor" href="#how-to-get-help" aria-hidden="true">#</a> How to get help</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Parameters help:
  <span class="token parameter variable">-h</span>      -- print basic options
  <span class="token parameter variable">-h</span> long -- print <span class="token function">more</span> options
  <span class="token parameter variable">-h</span> full -- print all options <span class="token punctuation">(</span>including all <span class="token function">format</span> and codec specific options, very long<span class="token punctuation">)</span>
  <span class="token parameter variable">-h</span> <span class="token assign-left variable">type</span><span class="token operator">=</span>name -- print all options <span class="token keyword">for</span> the named decoder/encoder/demuxer/muxer/filter/bsf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="basic-options" tabindex="-1"><a class="header-anchor" href="#basic-options" aria-hidden="true">#</a> Basic Options</h3>`,3),v=a("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[e("Global options "),a("span",{class:"token punctuation"},"("),e(`affect whole program instead of just one file:
`),a("span",{class:"token parameter variable"},"-loglevel"),e(" loglevel  "),a("span",{class:"token builtin class-name"},"set"),e(` logging level
`),a("span",{class:"token parameter variable"},"-v"),e(" loglevel         "),a("span",{class:"token builtin class-name"},"set"),e(` logging level
`),a("span",{class:"token parameter variable"},"-report"),e(`             generate a report
`),a("span",{class:"token parameter variable"},"-max_alloc"),e(" bytes    "),a("span",{class:"token builtin class-name"},"set"),e(` maximum size of a single allocated block
`),a("span",{class:"token parameter variable"},"-y"),e(`                  overwrite output files
`),a("span",{class:"token parameter variable"},"-n"),e(`                  never overwrite output files
`),a("span",{class:"token parameter variable"},"-ignore_unknown"),e(`     Ignore unknown stream types
`),a("span",{class:"token parameter variable"},"-filter_threads"),e(`     number of non-complex filter threads
`),a("span",{class:"token parameter variable"},"-filter_complex_threads"),e("  number of threads "),a("span",{class:"token keyword"},"for"),e(),a("span",{class:"token parameter variable"},"-filter_complex"),e(`
`),a("span",{class:"token parameter variable"},"-stats"),e(`              print progress report during encoding
`),a("span",{class:"token parameter variable"},"-max_error_rate"),e(" maximum error rate  ratio of errors "),a("span",{class:"token punctuation"},"("),a("span",{class:"token number"},"0.0"),e(": no errors, "),a("span",{class:"token number"},"1.0"),e(": "),a("span",{class:"token number"},"100"),e("% errors"),a("span",{class:"token punctuation"},")"),e(" above "),a("span",{class:"token function"},"which"),e(` ffmpeg returns an error instead of success.
`),a("span",{class:"token parameter variable"},"-bits_per_raw_sample"),e(" number  "),a("span",{class:"token builtin class-name"},"set"),e(` the number of bits per raw sample
`),a("span",{class:"token parameter variable"},"-vol"),e(" volume         change audio volume "),a("span",{class:"token punctuation"},"("),a("span",{class:"token number"},"256"),a("span",{class:"token operator"},"="),e("normal"),a("span",{class:"token punctuation"},")"),e(`
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"})])],-1),k=a("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token parameter variable"},"-f"),e(),a("span",{class:"token function"},"fmt"),e("              force "),a("span",{class:"token function"},"format"),e(`
`),a("span",{class:"token parameter variable"},"-c"),e(` codec            codec name
`),a("span",{class:"token parameter variable"},"-codec"),e(` codec        codec name
`),a("span",{class:"token parameter variable"},"-pre"),e(` preset         preset name
`),a("span",{class:"token parameter variable"},"-map_metadata"),e(" outfile"),a("span",{class:"token punctuation"},"["),e(",metadata"),a("span",{class:"token punctuation"},"]"),e(":infile"),a("span",{class:"token punctuation"},"["),e(",metadata"),a("span",{class:"token punctuation"},"]"),e("  "),a("span",{class:"token builtin class-name"},"set"),e(` metadata information of outfile from infile
`),a("span",{class:"token parameter variable"},"-t"),e(" duration         record or transcode "),a("span",{class:"token string"},'"duration"'),e(` seconds of audio/video
`),a("span",{class:"token parameter variable"},"-to"),e(" time_stop       record or transcode stop "),a("span",{class:"token function"},"time"),e(`
`),a("span",{class:"token parameter variable"},"-fs"),e(" limit_size      "),a("span",{class:"token builtin class-name"},"set"),e(" the limit "),a("span",{class:"token function"},"file"),e(" size "),a("span",{class:"token keyword"},"in"),e(` bytes
`),a("span",{class:"token parameter variable"},"-ss"),e(" time_off        "),a("span",{class:"token builtin class-name"},"set"),e(" the start "),a("span",{class:"token function"},"time"),e(` offset
`),a("span",{class:"token parameter variable"},"-sseof"),e(" time_off     "),a("span",{class:"token builtin class-name"},"set"),e(" the start "),a("span",{class:"token function"},"time"),e(` offset relative to EOF
`),a("span",{class:"token parameter variable"},"-seek_timestamp"),e("     enable/disable seeking by timestamp with "),a("span",{class:"token parameter variable"},"-ss"),e(`
`),a("span",{class:"token parameter variable"},"-timestamp"),e(),a("span",{class:"token function"},"time"),e("     "),a("span",{class:"token builtin class-name"},"set"),e(" the recording timestamp "),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},"'now'"),e(" to "),a("span",{class:"token builtin class-name"},"set"),e(" the current "),a("span",{class:"token function"},"time"),a("span",{class:"token punctuation"},")"),e(`
`),a("span",{class:"token parameter variable"},"-metadata"),e(),a("span",{class:"token assign-left variable"},"string"),a("span",{class:"token operator"},"="),e("string  "),a("span",{class:"token function"},"add"),e(` metadata
`),a("span",{class:"token parameter variable"},"-program"),e(),a("span",{class:"token assign-left variable"},"title"),a("span",{class:"token operator"},"="),e("string:st"),a("span",{class:"token operator"},"="),e("number"),a("span",{class:"token punctuation"},".."),e(".  "),a("span",{class:"token function"},"add"),e(` program with specified streams
`),a("span",{class:"token parameter variable"},"-target"),e(),a("span",{class:"token builtin class-name"},"type"),e("        specify target "),a("span",{class:"token function"},"file"),e(),a("span",{class:"token builtin class-name"},"type"),e(),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"vcd"'),e(", "),a("span",{class:"token string"},'"svcd"'),e(", "),a("span",{class:"token string"},'"dvd"'),e(", "),a("span",{class:"token string"},'"dv"'),e(" or "),a("span",{class:"token string"},'"dv50"'),e(" with optional prefixes "),a("span",{class:"token string"},'"pal-"'),e(", "),a("span",{class:"token string"},'"ntsc-"'),e(" or "),a("span",{class:"token string"},'"film-"'),a("span",{class:"token punctuation"},")"),e(`
`),a("span",{class:"token parameter variable"},"-apad"),e(`               audio pad
`),a("span",{class:"token parameter variable"},"-frames"),e(" number      "),a("span",{class:"token builtin class-name"},"set"),e(` the number of frames to output
`),a("span",{class:"token parameter variable"},"-filter"),e(" filter_graph  "),a("span",{class:"token builtin class-name"},"set"),e(` stream filtergraph
`),a("span",{class:"token parameter variable"},"-filter_script"),e(" filename  "),a("span",{class:"token builtin class-name"},"read"),e(" stream filtergraph description from a "),a("span",{class:"token function"},"file"),e(`
`),a("span",{class:"token parameter variable"},"-reinit_filter"),e(`      reinit filtergraph on input parameter changes
`),a("span",{class:"token parameter variable"},"-discard"),e(`            discard
`),a("span",{class:"token parameter variable"},"-disposition"),e(`        disposition
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"})])],-1),f=a("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token parameter variable"},"-vframes"),e(" number     "),a("span",{class:"token builtin class-name"},"set"),e(` the number of video frames to output
`),a("span",{class:"token parameter variable"},"-r"),e(" rate             "),a("span",{class:"token builtin class-name"},"set"),e(" frame rate "),a("span",{class:"token punctuation"},"("),e("Hz value, fraction or abbreviation"),a("span",{class:"token punctuation"},")"),e(`
`),a("span",{class:"token parameter variable"},"-s"),e(" size             "),a("span",{class:"token builtin class-name"},"set"),e(" frame size "),a("span",{class:"token punctuation"},"("),e("WxH or abbreviation"),a("span",{class:"token punctuation"},")"),e(`
`),a("span",{class:"token parameter variable"},"-aspect"),e(" aspect      "),a("span",{class:"token builtin class-name"},"set"),e(" aspect ratio "),a("span",{class:"token punctuation"},"("),a("span",{class:"token number"},"4"),e(":3, "),a("span",{class:"token number"},"16"),e(":9 or "),a("span",{class:"token number"},"1.3333"),e(", "),a("span",{class:"token number"},"1.7777"),a("span",{class:"token punctuation"},")"),e(`
`),a("span",{class:"token parameter variable"},"-bits_per_raw_sample"),e(" number  "),a("span",{class:"token builtin class-name"},"set"),e(` the number of bits per raw sample
`),a("span",{class:"token parameter variable"},"-vn"),e(`                 disable video
`),a("span",{class:"token parameter variable"},"-vcodec"),e(" codec       force video codec "),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},"'copy'"),e(" to copy stream"),a("span",{class:"token punctuation"},")"),e(`
`),a("span",{class:"token parameter variable"},"-timecode"),e(" hh:mm:ss"),a("span",{class:"token punctuation"},"["),e(":"),a("span",{class:"token punctuation"},";"),e("."),a("span",{class:"token punctuation"},"]"),e("ff  "),a("span",{class:"token builtin class-name"},"set"),e(` initial TimeCode value.
`),a("span",{class:"token parameter variable"},"-pass"),e(" n             "),a("span",{class:"token keyword"},"select"),e(" the pass number "),a("span",{class:"token punctuation"},"("),a("span",{class:"token number"},"1"),e(" to "),a("span",{class:"token number"},"3"),a("span",{class:"token punctuation"},")"),e(`
`),a("span",{class:"token parameter variable"},"-vf"),e(" filter_graph    "),a("span",{class:"token builtin class-name"},"set"),e(` video filters
`),a("span",{class:"token parameter variable"},"-ab"),e(" bitrate         audio bitrate "),a("span",{class:"token punctuation"},"("),e("please use -b:a"),a("span",{class:"token punctuation"},")"),e(`
`),a("span",{class:"token parameter variable"},"-b"),e(" bitrate          video bitrate "),a("span",{class:"token punctuation"},"("),e("please use -b:v"),a("span",{class:"token punctuation"},")"),e(`
`),a("span",{class:"token parameter variable"},"-dn"),e(`                 disable data
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"})])],-1),h=a("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token parameter variable"},"-aframes"),e(" number     "),a("span",{class:"token builtin class-name"},"set"),e(` the number of audio frames to output
`),a("span",{class:"token parameter variable"},"-aq"),e(" quality         "),a("span",{class:"token builtin class-name"},"set"),e(" audio quality "),a("span",{class:"token punctuation"},"("),e("codec-specific"),a("span",{class:"token punctuation"},")"),e(`
`),a("span",{class:"token parameter variable"},"-ar"),e(" rate            "),a("span",{class:"token builtin class-name"},"set"),e(" audio sampling rate "),a("span",{class:"token punctuation"},"("),e("in Hz"),a("span",{class:"token punctuation"},")"),e(`
`),a("span",{class:"token parameter variable"},"-ac"),e(" channels        "),a("span",{class:"token builtin class-name"},"set"),e(` number of audio channels
`),a("span",{class:"token parameter variable"},"-an"),e(`                 disable audio
`),a("span",{class:"token parameter variable"},"-acodec"),e(" codec       force audio codec "),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},"'copy'"),e(" to copy stream"),a("span",{class:"token punctuation"},")"),e(`
`),a("span",{class:"token parameter variable"},"-vol"),e(" volume         change audio volume "),a("span",{class:"token punctuation"},"("),a("span",{class:"token number"},"256"),a("span",{class:"token operator"},"="),e("normal"),a("span",{class:"token punctuation"},")"),e(`
`),a("span",{class:"token parameter variable"},"-af"),e(" filter_graph    "),a("span",{class:"token builtin class-name"},"set"),e(` audio filters
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"})])],-1),g=a("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token parameter variable"},"-s"),e(" size             "),a("span",{class:"token builtin class-name"},"set"),e(" frame size "),a("span",{class:"token punctuation"},"("),e("WxH or abbreviation"),a("span",{class:"token punctuation"},")"),e(`
`),a("span",{class:"token parameter variable"},"-sn"),e(`                 disable subtitle
`),a("span",{class:"token parameter variable"},"-scodec"),e(" codec       force subtitle codec "),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},"'copy'"),e(" to copy stream"),a("span",{class:"token punctuation"},")"),e(`
`),a("span",{class:"token parameter variable"},"-stag"),e(` fourcc/tag    force subtitle tag/fourcc
`),a("span",{class:"token parameter variable"},"-fix_sub_duration"),e(`   fix subtitles duration
`),a("span",{class:"token parameter variable"},"-canvas_size"),e(" size   "),a("span",{class:"token builtin class-name"},"set"),e(" canvas size "),a("span",{class:"token punctuation"},"("),e("WxH or abbreviation"),a("span",{class:"token punctuation"},")"),e(`
`),a("span",{class:"token parameter variable"},"-spre"),e(" preset        "),a("span",{class:"token builtin class-name"},"set"),e(` the subtitle options to the indicated preset
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"})])],-1),_=r(`<h2 id="usuage" tabindex="-1"><a class="header-anchor" href="#usuage" aria-hidden="true">#</a> Usuage</h2><h3 id="split-media-into-multi-parts" tabindex="-1"><a class="header-anchor" href="#split-media-into-multi-parts" aria-hidden="true">#</a> Split media into multi-parts</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># segment_time </span>
ffmpeg <span class="token parameter variable">-i</span> somefile.mp3 <span class="token parameter variable">-f</span> segment <span class="token parameter variable">-segment_time</span> <span class="token number">3</span> <span class="token parameter variable">-c</span> copy out%03d.mp3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># From time 4.5 seconds to output 1 frame named output.png</span>
ffmpeg <span class="token parameter variable">-i</span> input.mp4 <span class="token parameter variable">-ss</span> <span class="token number">4.500</span> <span class="token parameter variable">-vframes</span> <span class="token number">1</span> output.png

<span class="token comment"># From time 4.5 seconds to output 10 frame continously named output%d.png (%d if format string for integer)</span>
ffmpeg <span class="token parameter variable">-i</span> input.mp4 <span class="token parameter variable">-ss</span> <span class="token number">4.500</span> <span class="token parameter variable">-vframes</span> <span class="token number">10</span> output%d.png

<span class="token comment"># set frame per senond is 1, output 1 frame per second.</span>
ffmpeg <span class="token parameter variable">-i</span> input.mp4 <span class="token parameter variable">-vf</span> <span class="token assign-left variable">fps</span><span class="token operator">=</span><span class="token number">1</span> output%d.png

<span class="token comment"># set frame per senond is 0.1, output 0.1 frame per second, so the result is output 1 frame every 10 seconds.</span>
ffmpeg <span class="token parameter variable">-i</span> input.mp4 <span class="token parameter variable">-vf</span> <span class="token assign-left variable">fps</span><span class="token operator">=</span><span class="token number">0.1</span> output%d.png

<span class="token comment"># set frame per senond is 10, output 10 frame per second</span>
ffmpeg <span class="token parameter variable">-i</span> input.mp4 <span class="token parameter variable">-vf</span> <span class="token assign-left variable">fps</span><span class="token operator">=</span><span class="token number">10</span> output%d.png
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="other-resources" tabindex="-1"><a class="header-anchor" href="#other-resources" aria-hidden="true">#</a> Other Resources</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>然后从视频中提取图片的命令如下：
ffmpeg <span class="token parameter variable">-i</span> <span class="token punctuation">[</span>视频路径<span class="token punctuation">]</span> <span class="token parameter variable">-r</span> <span class="token number">1</span> <span class="token parameter variable">-q:v</span> <span class="token number">2</span> <span class="token parameter variable">-f</span> image2 image-%d.jpeg
 视频路径：如 <span class="token string">&quot;myvideo.mp4&quot;</span><span class="token punctuation">(</span>这时这个视频也在bin文件目录下才可以直接这么写<span class="token punctuation">)</span>，或者完整路径的

  <span class="token parameter variable">-r</span>   ：每秒提取的帧数，如上面为每秒1帧，即一张图像
  <span class="token parameter variable">-q:v</span> ：图片质量
  <span class="token parameter variable">-f</span>   ：图片格式，上述为image2
image-%d.jpeg：生成图像的文件名，可以加上完整路径，%d会使文件名按整数编号，如上述生成图像为image-1.jpeg, image-2.jpeg, <span class="token punctuation">..</span>.

还有其他参数：
  <span class="token parameter variable">-t</span>      ：持续时间，如-t <span class="token number">4</span>表示持续4s
  <span class="token parameter variable">-ss</span>     ：起始时间，如-ss 01:30:14，从01:30:14开始
  -vframes：指定抽取的帧数，如-vframes <span class="token number">120</span>，指定抽取120张
  <span class="token parameter variable">-s</span>      ：格式大小，如-s 640x360
  <span class="token parameter variable">-y</span>      ：覆盖，直接使用
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="clip-mp3" tabindex="-1"><a class="header-anchor" href="#clip-mp3" aria-hidden="true">#</a> Clip mp3</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># clip input.mp3 from 10 seconds to 16 seconds</span>
ffmpeg <span class="token parameter variable">-ss</span> <span class="token number">10</span> <span class="token parameter variable">-to</span> <span class="token number">16</span> <span class="token parameter variable">-i</span> input.mp3 output.mp3

<span class="token comment"># clip input.mp3 from 10 seconds to keep 16 seconds length</span>
ffmpeg <span class="token parameter variable">-ss</span> <span class="token number">10</span> <span class="token parameter variable">-t</span> <span class="token number">16</span> <span class="token parameter variable">-i</span> input.mp3 output.mp3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),x=a("br",null,null,-1),y={href:"https://blog.csdn.net/qq_43057180/article/details/105676230",target:"_blank",rel:"noopener noreferrer"},w={href:"https://yt1s.com/en17",target:"_blank",rel:"noopener noreferrer"},q=r(`<h2 id="how-to-join-ts-files-into-a-single-file" tabindex="-1"><a class="header-anchor" href="#how-to-join-ts-files-into-a-single-file" aria-hidden="true">#</a> How to join ts files into a single file</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ffmpeg <span class="token parameter variable">-f</span> concat <span class="token parameter variable">-i</span> filelist.txt <span class="token parameter variable">-c</span> copy output.mp4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>filelist.txt</code></p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>file &#39;seg-1-v1-a1.ts&#39;
file &#39;seg-2-v1-a1.ts&#39;
file &#39;seg-3-v1-a1.ts&#39;
file &#39;seg-4-v1-a1.ts&#39;
file &#39;seg-5-v1-a1.ts&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="change-resolution" tabindex="-1"><a class="header-anchor" href="#change-resolution" aria-hidden="true">#</a> Change Resolution</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ffmpeg <span class="token parameter variable">-i</span> video1.mp4 <span class="token parameter variable">-vf</span> <span class="token string">&quot;scale=1920:1080&quot;</span> <span class="token parameter variable">-c:a</span> copy resized_video1.mp4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="merge-audio-and-video" tabindex="-1"><a class="header-anchor" href="#merge-audio-and-video" aria-hidden="true">#</a> Merge Audio and Video</h2><h3 id="reencode-audio" tabindex="-1"><a class="header-anchor" href="#reencode-audio" aria-hidden="true">#</a> reencode audio</h3><p><code>ffmpeg -i video.mp4 -i audio.wav -c:v copy -c:a aac output.mp4</code></p><h3 id="copy-audio" tabindex="-1"><a class="header-anchor" href="#copy-audio" aria-hidden="true">#</a> copy audio</h3><p><code>ffmpeg -i video.mp4 -i audio.wav -c copy output.mkv</code></p><h3 id="replace-audio-stream" tabindex="-1"><a class="header-anchor" href="#replace-audio-stream" aria-hidden="true">#</a> Replace audio stream</h3><p><code>ffmpeg -i video.mp4 -i audio.wav -c:v copy -c:a aac -map 0:v:0 -map 1:a:0 output.mp4</code><br> The <code>-map</code> option makes ffmpeg only use the first video stream from the first input and the first audio stream from the second input for the output file.</p><h2 id="pictures-to-video" tabindex="-1"><a class="header-anchor" href="#pictures-to-video" aria-hidden="true">#</a> Pictures to Video</h2><p>One image per second</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ffmpeg <span class="token parameter variable">-framerate</span> <span class="token number">1</span> <span class="token parameter variable">-pattern_type</span> glob <span class="token parameter variable">-i</span> <span class="token string">&#39;*.png&#39;</span> <span class="token punctuation">\\</span>
  <span class="token parameter variable">-c:v</span> libx264 <span class="token parameter variable">-r</span> <span class="token number">30</span> <span class="token parameter variable">-pix_fmt</span> yuv420p out.mp4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Add some audio</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ffmpeg <span class="token parameter variable">-framerate</span> <span class="token number">1</span> <span class="token parameter variable">-pattern_type</span> glob <span class="token parameter variable">-i</span> <span class="token string">&#39;*.png&#39;</span> <span class="token parameter variable">-i</span> audio.ogg <span class="token punctuation">\\</span>
  <span class="token parameter variable">-c:a</span> copy <span class="token parameter variable">-shortest</span> <span class="token parameter variable">-c:v</span> libx264 <span class="token parameter variable">-r</span> <span class="token number">30</span> <span class="token parameter variable">-pix_fmt</span> yuv420p out.mp4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="add-overlay-logo" tabindex="-1"><a class="header-anchor" href="#add-overlay-logo" aria-hidden="true">#</a> Add overlay Logo</h2>`,19),A=a("code",null,"ffmpeg.exe -i video.mp4 -i logo.png -filter_complex “overlay=X:Y” output.mp4",-1),z=a("br",null,null,-1),j={href:"https://arccoder.medium.com/ffmpeg-add-a-logo-on-video-bf1f4652792a",target:"_blank",rel:"noopener noreferrer"};function V(C,H){const p=o("CodeTabs"),l=o("ExternalLinkIcon");return d(),u("div",null,[b,i(p,{id:"7",data:[{id:"Global options"},{id:"Per-file main options"},{id:"Video options:"},{id:"Audio options:"},{id:"Subtitle options:"}]},{title0:s(({value:n,isActive:t})=>[e("Global options")]),title1:s(({value:n,isActive:t})=>[e("Per-file main options")]),title2:s(({value:n,isActive:t})=>[e("Video options:")]),title3:s(({value:n,isActive:t})=>[e("Audio options:")]),title4:s(({value:n,isActive:t})=>[e("Subtitle options:")]),tab0:s(({value:n,isActive:t})=>[v]),tab1:s(({value:n,isActive:t})=>[k]),tab2:s(({value:n,isActive:t})=>[f]),tab3:s(({value:n,isActive:t})=>[h]),tab4:s(({value:n,isActive:t})=>[g]),_:1}),_,a("p",null,[e("ffmpeg使用："),x,a("a",y,[e("https://blog.csdn.net/qq_43057180/article/details/105676230"),i(l)])]),a("p",null,[e("youtube downloader online: "),a("a",w,[e("https://yt1s.com/en17"),i(l)])]),q,a("p",null,[A,z,a("a",j,[e("Resource"),i(l)])])])}const E=c(m,[["render",V],["__file","q_a.html.vue"]]);export{E as default};

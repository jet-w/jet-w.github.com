import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as r,c as s,b as e,d as t,e as n,a as c,f as o}from"./app-3125ebcd.js";const d={},u=o('<h1 id="human-systems-dialogic-agent" tabindex="-1"><a class="header-anchor" href="#human-systems-dialogic-agent" aria-hidden="true">#</a> Human Systems Dialogic Agent</h1><p>This project is for the setup/execution of the Human Systems Dialogic Agent.</p><p>The solution uses AWS CDK to automate the compilation of CloudFormation code for deployment to Human Systems&#39; Dialogic Agent AWS Environments (i.e. &#39;HS-DIALOGIC-AGENT-DEV&#39;, &#39;HS-DIALOGIC-AGENT-STAGE&#39; and &#39;HS-DIALOGIC-AGENT-PROD&#39; accounts).</p><ul><li><a href="#human-systems-dialogic-agent">Human Systems Dialogic Agent</a><ul><li><a href="#2-setup-local-environment-for-local-builddeployment">2. Setup Local Environment for local build/deployment</a><ul><li><a href="#21-software-pre-requisitesrecommendations">2.1 Software Pre-requisites/Recommendations</a></li></ul></li><li><a href="#3-cicd-initial-setup-once-off---setting-up-orchestration">3. CI/CD Initial Setup (Once-off) - Setting up Orchestration</a><ul><li><a href="#31-set-some-variables-we-will-reuse-for-the-deployment">3.1 Set some variables we will reuse for the deployment</a></li><li><a href="#32-setup-codecommit-repo-in-deployment-account">3.2 Setup CodeCommit Repo in DEPLOYMENT Account</a></li><li><a href="#33-deploy-the-s3-bucket-for-build-artifacts-with-policy--kms-key-to-deployment-account">3.3 Deploy the S3 Bucket for Build Artifacts with Policy + KMS Key to DEPLOYMENT Account</a></li><li><a href="#34-get-copy-of-kms-key-arn-just-created">3.4 Get Copy of KMS Key Arn just created</a></li><li><a href="#35-setup-iam-roles-for-codepipeline-to-access-deployment-account">3.5 Setup IAM Roles for CodePipeline to access DEPLOYMENT Account</a></li><li><a href="#36-deploy-iam-roles-and-kms-trust-with-target-account">3.6 Deploy IAM Roles and KMS Trust with TARGET Account</a></li><li><a href="#36-deploy-placeholder-secrets-used-by-application">3.6 Deploy Placeholder Secrets used by Application</a></li><li><a href="#37-setup-cicd-infrastructure-pipeline-codepipeline-to-deployment-account">3.7 Setup CI/CD Infrastructure Pipeline (CodePipeline) to DEPLOYMENT account</a></li></ul></li><li><a href="#4-testing-locally">4. Testing Locally</a><ul><li><a href="#41-python-environment-for-local-builddebugging">4.1 Python Environment for Local Build/Debugging</a></li><li><a href="#42-aws-cdk">4.2 AWS CDK</a></li><li><a href="#5-working-with-the-api-fastapi">5. Working with the API (FastAPI)</a><ul><li><a href="#running-locally">Running locally</a></li></ul></li></ul></li><li><a href="#7-contact">7. Contact</a></li></ul></li></ul><h2 id="_2-setup-local-environment-for-local-build-deployment" tabindex="-1"><a class="header-anchor" href="#_2-setup-local-environment-for-local-build-deployment" aria-hidden="true">#</a> 2. Setup Local Environment for local build/deployment</h2><h3 id="_2-1-software-pre-requisites-recommendations" tabindex="-1"><a class="header-anchor" href="#_2-1-software-pre-requisites-recommendations" aria-hidden="true">#</a> 2.1 Software Pre-requisites/Recommendations</h3>',6),p={href:"https://code.visualstudio.com/",target:"_blank",rel:"noopener noreferrer"},m=e("br",null,null,-1),v=e("ul",null,[e("li",null,[t("AWS "),e("ul",null,[e("li",null,"AWS Toolkit (amazonwebservices.aws-toolkit-vscode) - Provides AWS Explorer for many services, AWS SAM integration"),e("li",null,[t("CloudFormation: "),e("ul",null,[e("li",null,"CloudFormation (aws-scripting-guy) – intellisense for CloudFormation templates"),e("li",null,"Indent-rainbow (oderwat) – helps with seeing your indents in Python and YAML"),e("li",null,"YAML (redhat.vscode-yaml) - YAML validation and formatter"),e("li",null,"CloudFormation Linter (kddejong) - Fixes YAML Custom tags. Ironically you can uninstall it once installed (it will still modify your settings.json with the correct CloudFormation custom tags). If you do keep it installed you will also need to install Python and cfn-lint to get working correctly.")])])])])],-1),h=e("li",null,"AWS Account Setup as per 'AWS Control Tower' landing zones. This will provide the best overarching security for your environment. You can proceed without this as long as you have minimally two aws accounts DEPLOYMENT (sweat-deployment) and a application account (sweat-production) but it is not recommended.",-1),g={href:"https://www.sourcetreeapp.com/",target:"_blank",rel:"noopener noreferrer"},f={href:"https://aws.amazon.com/cli/",target:"_blank",rel:"noopener noreferrer"},b={href:"https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install.html",target:"_blank",rel:"noopener noreferrer"},y={href:"https://docs.aws.amazon.com/cdk/latest/guide/home.html",target:"_blank",rel:"noopener noreferrer"},_=e("li",null,"Setup your AWS profiles. To start by running:",-1),q=o(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>aws configure
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This step is mostly just to create a &#39;config&#39; and &#39;credentials&#39; text file located:<br> C:\\Users\\MYUSER.aws (assume your running this in Windows)<br> set your default region in the &#39;config&#39; file</p><p>This project assumes the following AWS profiles setup on your machine:<br> [hs-deployment] - the code and ci/cd account<br> [hs-dialogic-agent-dev] - target DEV environment account<br> [hs-dialogic-agent-stage] - target STAGE environment account<br> [hs-dialogic-agent-prod] - target PROD environment account</p><ol><li>Create a local build folders (using Bash Terminal)<br> mkdir .build .build/dev .build/stage .build/prod .build/cdk</li></ol><h2 id="_3-ci-cd-initial-setup-once-off-setting-up-orchestration" tabindex="-1"><a class="header-anchor" href="#_3-ci-cd-initial-setup-once-off-setting-up-orchestration" aria-hidden="true">#</a> 3. CI/CD Initial Setup (Once-off) - Setting up Orchestration</h2><h3 id="_3-1-set-some-variables-we-will-reuse-for-the-deployment" tabindex="-1"><a class="header-anchor" href="#_3-1-set-some-variables-we-will-reuse-for-the-deployment" aria-hidden="true">#</a> 3.1 Set some variables we will reuse for the deployment</h3><p>*<strong>DEV VARIABLES - OLD ONE - NEEDED TEMPORARILY</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>projectFriendlyName=&quot;Human Systems Dialogic Agent&quot;
projectResourcePrefix=&quot;hs-dialogic-agent&quot;
environmentType=&quot;dev&quot;
deploymentAccountNumber=&quot;851725322837&quot; 
targetAccountNumber1=&quot;891377036533&quot;
profileDeploymentAccount=&quot;hs-deployment&quot;
profileTargetAccount1=&quot;hs-dialogic-agent-dev&quot;
awsregion=&quot;us-east-1&quot;
repoBranch=&quot;dev&quot;
artifactsBucketName=&quot;\${projectResourcePrefix}-\${environmentType}-buildartifacts&quot;
enableDeletionProtection=&quot;False&quot;
printf &quot;Done&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>*<strong>DEV VARIABLES</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>projectFriendlyName=&quot;Human Systems Dialogic Agent&quot;
projectResourcePrefix=&quot;hs-dialogic-agent&quot;
environmentType=&quot;dev-main&quot;
deploymentAccountNumber=&quot;851725322837&quot; 
targetAccountNumber1=&quot;891377036533&quot;
profileDeploymentAccount=&quot;hs-deployment&quot;
profileTargetAccount1=&quot;hs-dialogic-agent-dev&quot;
awsregion=&quot;us-east-1&quot;
repoBranch=&quot;dev&quot;
artifactsBucketName=&quot;\${projectResourcePrefix}-\${environmentType}-buildartifacts&quot;
enableDeletionProtection=&quot;False&quot;
printf &quot;Done&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>*<strong>DEV/C3L VARIABLES</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>projectFriendlyName=&quot;Human Systems Dialogic Agent&quot;
projectResourcePrefix=&quot;hs-dialogic-agent&quot;
environmentType=&quot;dev-c3l&quot;
deploymentAccountNumber=&quot;851725322837&quot; 
targetAccountNumber1=&quot;891377036533&quot;
profileDeploymentAccount=&quot;hs-deployment&quot;
profileTargetAccount1=&quot;hs-dialogic-agent-dev&quot;
awsregion=&quot;us-east-1&quot;
repoBranch=&quot;dev-c3l&quot;
artifactsBucketName=&quot;\${projectResourcePrefix}-\${environmentType}-buildartifacts&quot;
enableDeletionProtection=&quot;False&quot;
printf &quot;Done&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>*<strong>DEV/Figaro VARIABLES</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>projectFriendlyName=&quot;Human Systems Dialogic Agent&quot;
projectResourcePrefix=&quot;hs-dialogic-agent&quot;
environmentType=&quot;dev-figaro&quot;
deploymentAccountNumber=&quot;851725322837&quot; 
targetAccountNumber1=&quot;891377036533&quot;
profileDeploymentAccount=&quot;hs-deployment&quot;
profileTargetAccount1=&quot;hs-dialogic-agent-dev&quot;
awsregion=&quot;us-east-1&quot;
repoBranch=&quot;dev-figaro&quot;
artifactsBucketName=&quot;\${projectResourcePrefix}-\${environmentType}-buildartifacts&quot;
enableDeletionProtection=&quot;False&quot;
printf &quot;Done&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-setup-codecommit-repo-in-deployment-account" tabindex="-1"><a class="header-anchor" href="#_3-2-setup-codecommit-repo-in-deployment-account" aria-hidden="true">#</a> 3.2 Setup CodeCommit Repo in DEPLOYMENT Account</h3><ol><li>Compile the CloudFormation script</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>aws cloudformation package --template-file ./cf/setup/01_codecommit_repo.yaml --output-template-file &quot;./.build/_01_codecommit_repo.yaml&quot; --s3-bucket NOTUSED --profile $profileDeploymentAccount
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>Deploy the CloudFormation script</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>aws cloudformation deploy --template-file &quot;./.build/_01_codecommit_repo.yaml&quot; --stack-name &quot;\${projectResourcePrefix}-setup-codecommit&quot; --profile $profileDeploymentAccount --region $awsregion --capabilities CAPABILITY_NAMED_IAM --parameter-overrides ProjectFriendlyName=&quot;$projectFriendlyName&quot; ProjectResourcePrefix=$projectResourcePrefix
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-3-deploy-the-s3-bucket-for-build-artifacts-with-policy-kms-key-to-deployment-account" tabindex="-1"><a class="header-anchor" href="#_3-3-deploy-the-s3-bucket-for-build-artifacts-with-policy-kms-key-to-deployment-account" aria-hidden="true">#</a> 3.3 Deploy the S3 Bucket for Build Artifacts with Policy + KMS Key to DEPLOYMENT Account</h3><ol><li>Compile the CloudFormation script</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>aws cloudformation package --template-file ./cf/setup/02_deployment_artifacts_and_kms.yaml --output-template-file &quot;./.build/\${environmentType}/_02_deployment_artifacts_and_kms.yaml&quot; --s3-bucket NOTUSED --profile $profileDeploymentAccount
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>Deploy the CloudFormation script</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>aws cloudformation deploy --template-file &quot;./.build/\${environmentType}/_02_deployment_artifacts_and_kms.yaml&quot; --stack-name &quot;\${projectResourcePrefix}-setup-kms-artif-\${environmentType}&quot; --profile $profileDeploymentAccount --region $awsregion --capabilities CAPABILITY_NAMED_IAM --parameter-overrides EnvironmentType=$environmentType TargetAccountNumber1=$targetAccountNumber1 ProjectFriendlyName=&quot;$projectFriendlyName&quot; ProjectResourcePrefix=$projectResourcePrefix
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-4-get-copy-of-kms-key-arn-just-created" tabindex="-1"><a class="header-anchor" href="#_3-4-get-copy-of-kms-key-arn-just-created" aria-hidden="true">#</a> 3.4 Get Copy of KMS Key Arn just created</h3><p>This command will copy to a local variable the KMS Key Arn for step 3</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>get_cmk_command=&quot;aws cloudformation describe-stacks --stack-name &quot;\${projectResourcePrefix}-setup-kms-artif-\${environmentType}&quot; --profile $profileDeploymentAccount --region $awsregion --query \\&quot;Stacks[0].Outputs[?OutputKey==&#39;CodePipelineKMSKeyArn&#39;].OutputValue\\&quot; --output text&quot;
CodePipelineKMSKeyArn=$(eval $get_cmk_command)
printf &quot;Got CMK ARN: $CodePipelineKMSKeyArn&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-5-setup-iam-roles-for-codepipeline-to-access-deployment-account" tabindex="-1"><a class="header-anchor" href="#_3-5-setup-iam-roles-for-codepipeline-to-access-deployment-account" aria-hidden="true">#</a> 3.5 Setup IAM Roles for CodePipeline to access DEPLOYMENT Account</h3><ol><li>Compile the CloudFormation script</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>aws cloudformation package --template-file ./cf/setup/03_iam_role_codepipeline.yaml --output-template-file &quot;./.build/\${environmentType}/_03_iam_role_codepipeline.yaml&quot; --s3-bucket NOTUSED --profile $profileDeploymentAccount
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>Deploy the CloudFormation script</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>aws cloudformation deploy --template-file &quot;./.build/\${environmentType}/_03_iam_role_codepipeline.yaml&quot; --stack-name &quot;\${projectResourcePrefix}-setup-cp-roles-\${environmentType}&quot; --profile $profileDeploymentAccount --region $awsregion --capabilities CAPABILITY_NAMED_IAM --parameter-overrides EnvironmentType=$environmentType DeploymentAccountNumber=$deploymentAccountNumber KMSKeyArn=$CodePipelineKMSKeyArn ProjectFriendlyName=&quot;$projectFriendlyName&quot; ProjectResourcePrefix=$projectResourcePrefix
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-6-deploy-iam-roles-and-kms-trust-with-target-account" tabindex="-1"><a class="header-anchor" href="#_3-6-deploy-iam-roles-and-kms-trust-with-target-account" aria-hidden="true">#</a> 3.6 Deploy IAM Roles and KMS Trust with TARGET Account</h3><ol><li>Compile the CloudFormation script</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>aws cloudformation package --template-file ./cf/setup/04_target_deploy_roles.yaml --output-template-file &quot;./.build/\${environmentType}/_04_target_deploy_roles.yaml&quot; --s3-bucket NOTUSED --profile $profileDeploymentAccount
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>Deploy the CloudFormation script</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>aws cloudformation deploy --template-file &quot;./.build/\${environmentType}/_04_target_deploy_roles.yaml&quot; --stack-name &quot;\${projectResourcePrefix}-setup-deployroles-\${environmentType}&quot; --profile $profileTargetAccount1 --region $awsregion --capabilities CAPABILITY_NAMED_IAM --parameter-overrides EnvironmentType=$environmentType DeploymentAccountNumber=$deploymentAccountNumber KMSKeyArn=$CodePipelineKMSKeyArn ProjectFriendlyName=&quot;$projectFriendlyName&quot; ProjectResourcePrefix=$projectResourcePrefix
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-6-deploy-placeholder-secrets-used-by-application" tabindex="-1"><a class="header-anchor" href="#_3-6-deploy-placeholder-secrets-used-by-application" aria-hidden="true">#</a> 3.6 Deploy Placeholder Secrets used by Application</h3>`,38),x=o(`<h3 id="_3-7-setup-ci-cd-infrastructure-pipeline-codepipeline-to-deployment-account" tabindex="-1"><a class="header-anchor" href="#_3-7-setup-ci-cd-infrastructure-pipeline-codepipeline-to-deployment-account" aria-hidden="true">#</a> 3.7 Setup CI/CD Infrastructure Pipeline (CodePipeline) to DEPLOYMENT account</h3><ol><li>Compile the CloudFormation script</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>aws cloudformation package --template-file ./cf/cicd/01_pipeline.yaml --output-template-file &quot;./.build/\${environmentType}/_01_pipeline.yaml&quot; --s3-bucket NOTUSED --profile $profileDeploymentAccount
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>Deploy the CloudFormation script</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>aws cloudformation deploy --template-file &quot;./.build/\${environmentType}/_01_pipeline.yaml&quot; --stack-name &quot;\${projectResourcePrefix}-pipeline-\${environmentType}&quot; --profile $profileDeploymentAccount --region $awsregion --capabilities CAPABILITY_NAMED_IAM --parameter-overrides EnvironmentType=$environmentType TargetAccountNumber1=$targetAccountNumber1 ProjectFriendlyName=&quot;$projectFriendlyName&quot; ProjectResourcePrefix=$projectResourcePrefix CFTemplateName=&quot;cdkapp.template.json&quot; BranchName=$repoBranch RepoAccountNumber=$deploymentAccountNumber EnableDeletionProtection=$enableDeletionProtection
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_4-testing-locally" tabindex="-1"><a class="header-anchor" href="#_4-testing-locally" aria-hidden="true">#</a> 4. Testing Locally</h2><h3 id="_4-1-python-environment-for-local-build-debugging" tabindex="-1"><a class="header-anchor" href="#_4-1-python-environment-for-local-build-debugging" aria-hidden="true">#</a> 4.1 Python Environment for Local Build/Debugging</h3><p>This project is set up like a standard Python project. The initialization process also creates<br> a virtualenv within this project, stored under the .venv directory. To create the virtualenv<br> it assumes that there is a <code>python3</code> executable in your path with access to the <code>venv</code> package.<br> If for any reason the automatic creation of the virtualenv fails, you can create the virtualenv<br> manually once the init process completes.</p><p>To manually create a virtualenv on MacOS and Linux:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sudo apt install python3.8-venv
cd py-cdk/src
python3 -m venv .venv

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Install and Update NodeJS (required for CDK)</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sudo apt-get install -y nodejs

curl -fsSL https://deb.nodesource.com/setup_current.x | sudo -E bash -
sudo apt-get install -y nodejs
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>After the init process completes and the virtualenv is created, you can use the following<br> step to activate your virtualenv.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>cd py-cdk/src
source .venv/bin/activate
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>If you are a Windows platform, you would activate the virtualenv like this:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>% .venv\\Scripts\\activate.bat
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Once the virtualenv is activated, you can install the required dependencies.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ pip install -r requirements.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_4-2-aws-cdk" tabindex="-1"><a class="header-anchor" href="#_4-2-aws-cdk" aria-hidden="true">#</a> 4.2 AWS CDK</h3><p>Provided you have the AWS CDK installed locally you can test generated stacks built with this framework by providing the build script a local AWS Profile.</p><p>Run the AWS CDK build script from THE ROOT project folder on a bash terminal with:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>./cf/cicd/build_aws_cdk.sh -p $profileTargetAccount1 -s $artifactsBucketName -d $enableDeletionProtection
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Outputs from the CDK will be built to the (./.build/cdk) folder for reviewing.</p><h3 id="_5-working-with-the-api-fastapi" tabindex="-1"><a class="header-anchor" href="#_5-working-with-the-api-fastapi" aria-hidden="true">#</a> 5. Working with the API (FastAPI)</h3><h4 id="running-locally" tabindex="-1"><a class="header-anchor" href="#running-locally" aria-hidden="true">#</a> Running locally</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>cd &#39;{projectdirectory}/lambda/src/api&#39;
pip install -r requirements.txt
source ./env/bin/activate
export AWS_PROFILE=hs-saas-platform-dev
uvicorn index:app --reload
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,26),A=e("br",null,null,-1),w={href:"http://localhost:8001/docs",target:"_blank",rel:"noopener noreferrer"},D=e("h2",{id:"_7-contact",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_7-contact","aria-hidden":"true"},"#"),t(" 7. Contact")],-1),T=e("p",null,"For more information please contact:",-1),P=e("strong",null,"Damien Coyle (Comunet Pty Ltd)",-1),k=e("em",null,"Initial work OCT 2023",-1),S={href:"https://www.comunet.com.au",target:"_blank",rel:"noopener noreferrer"};function $(C,N){const i=l("ExternalLinkIcon");return r(),s("div",null,[u,e("ol",null,[e("li",null,[t("An IDE (I recommend VS Code) ["),e("a",p,[t("https://code.visualstudio.com/"),n(i)]),t("]"),m,t(" Some helpful VS Code Extensions! "),v]),h,e("li",null,[t("Atlassian Sourcetree ["),e("a",g,[t("https://www.sourcetreeapp.com/"),n(i)]),t("]")]),e("li",null,[t("AWS CLI ["),e("a",f,[t("https://aws.amazon.com/cli/"),n(i)]),t("]")]),e("li",null,[t("AWS SAM CLI ["),e("a",b,[t("https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install.html"),n(i)]),t("]")]),e("li",null,[t("AWS CDK ["),e("a",y,[t("https://docs.aws.amazon.com/cdk/latest/guide/home.html"),n(i)]),t("]")]),_]),q,c(' 1. Compile the CloudFormation script\n```\naws cloudformation package --template-file ./cf/setup/05_setup_secrets.yaml --output-template-file "./.build/${environmentType}/_05_setup_secrets.yaml" --s3-bucket NOTUSED --profile $profileDeploymentAccount\n```\n\n2. Deploy the CloudFormation script\n```\naws cloudformation deploy --template-file "./.build/${environmentType}/_05_setup_secrets.yaml" --stack-name "${projectResourcePrefix}-setup-secrets-${environmentType}" --profile $profileTargetAccount1 --region $awsregion --capabilities CAPABILITY_NAMED_IAM --parameter-overrides EnvironmentType=$environmentType ProjectFriendlyName="$projectFriendlyName" ProjectResourcePrefix=$projectResourcePrefix\n``` '),x,e("p",null,[t("Navigate to docs to get swagger site:"),A,e("a",w,[t("http://localhost:8001/docs"),n(i)])]),D,T,e("ul",null,[e("li",null,[P,t(" - "),k,t(" - "),e("a",S,[t("Comunet"),n(i)])])])])}const I=a(d,[["render",$],["__file","10.dialog-agent.html.vue"]]);export{I as default};

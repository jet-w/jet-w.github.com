import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,a as t,o as n}from"./app-CLjcCk4I.js";const a="/assets/docker_bridge-BJQklfH9.png",r="/assets/docker_host-BJSmicLK.png",o="/assets/docker_container-VwqUw4SN.png",l={};function h(k,e){return n(),s("div",null,e[0]||(e[0]=[t('<h2 id="docker-network-mode" tabindex="-1"><a class="header-anchor" href="#docker-network-mode"><span>Docker Network Mode</span></a></h2><ul><li>bridge: setup ip for every container, and connect container to <code>docker0</code> network bridge. (Default mode)</li><li>host: The container will not virtualize it&#39;s own net, it share the ip and port with host.</li><li>none: The container own its own network namespace, but there is no netowrk settings, such as veth pair, bridge connection, ip, etc.</li></ul><table><thead><tr><th>Net Mode</th><th>Brief</th></tr></thead><tbody><tr><td>bridge</td><td>Allocate IP and other resources for each container, and connect to docker virtual net bridge, default mode</td></tr><tr><td>host</td><td>Container will not own it&#39;s onw net configuration, share with host</td></tr><tr><td>none</td><td>Container has the independent Network namespace, but there is no network resources</td></tr><tr><td>container</td><td>The new container will not create its own network configuration, only share with a specified container</td></tr></tbody></table><div class="hint-container info"><p class="hint-container-title">Info</p><p>Docker will create a bridge named <code>docker0</code>, it connects to other physical or virtual net card, it can put all containers and local host to same physical network. Docker specify IP and mask for docker0 by default, which can make sure the communication between host and container.</p></div><h3 id="bridge" tabindex="-1"><a class="header-anchor" href="#bridge"><span>Bridge</span></a></h3><figure><img src="'+a+`" alt="Docker Bridge" tabindex="0" loading="lazy"><figcaption>Docker Bridge</figcaption></figure><p>Example to test</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 8081:8080</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> centos</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 8082:8080</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> centos</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="host" tabindex="-1"><a class="header-anchor" href="#host"><span>Host</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 8083:8080</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --network</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> host</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test3</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> centos</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="`+r+'" alt="Docker Host" tabindex="0" loading="lazy"><figcaption>Docker Host</figcaption></figure><div class="hint-container info"><p class="hint-container-title">Info</p><p>option <code>-p 8083:8080</code> will not work</p></div><h3 id="none" tabindex="-1"><a class="header-anchor" href="#none"><span>None</span></a></h3><p>There is no network</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 8084:8080</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --network</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> none</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test4</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> centos</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="container" tabindex="-1"><a class="header-anchor" href="#container"><span>Container</span></a></h3><figure><img src="'+o+`" alt="Docker Container" tabindex="0" loading="lazy"><figcaption>Docker Container</figcaption></figure><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 8085:8080</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --network</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> container:test3</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test5</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> centos</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">Warning</p><p>if shutdown the shared container, the new container will lost all network connection.</p></div><h3 id="network-operation" tabindex="-1"><a class="header-anchor" href="#network-operation"><span>Network Operation</span></a></h3><p>Default mode is <code>bridge</code></p><ul><li>List<br><code>docker network ls</code></li><li>Create<br><code>docker network create {newwork_name}</code></li><li>Delete<br><code>docker network delete {network_name}</code></li><li>Inspect<br><code>docker network inspect {network_name}</code></li></ul><h2 id="customized-network" tabindex="-1"><a class="header-anchor" href="#customized-network"><span>Customized Network</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> network</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> create</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> abc</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 8081:8080</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --network</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> abc</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> node1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> centos</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 8081:8080</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --network</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> abc</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> node2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> centos</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">Info</p><p>The customized network will maintain the map between host name and ip</p></div><h2 id="reference" tabindex="-1"><a class="header-anchor" href="#reference"><span>Reference</span></a></h2><ol><li><a href="https://www.youtube.com/watch?v=lcOj04Z0St4&amp;list=PLmOn9nNkQxJFtOGw9fsoLHgtCxcki7TtK&amp;index=66" target="_blank" rel="noopener noreferrer">Tutoriaspoint</a></li><li><a href="https://www.runoob.com/docker/docker-dockerfile.html" target="_blank" rel="noopener noreferrer">Docker Dockerfile on runoob</a></li><li><a href="https://docs.docker.com/engine/reference/builder/" target="_blank" rel="noopener noreferrer">Dockerfile reference (official)</a></li></ol>`,27)]))}const p=i(l,[["render",h],["__file","06.Docker Network.html.vue"]]),g=JSON.parse(`{"path":"/techniques/Tools/docker/06.Docker%20Network.html","title":"06. Docker Network","lang":"en-US","frontmatter":{"title":"06. Docker Network","date":"2024-10-23T00:00:00.000Z","icon":"circle-dot","author":"Haiyue","category":["docker"],"tag":["docker"],"star":true,"sticky":true,"description":"Docker Network Mode bridge: setup ip for every container, and connect container to docker0 network bridge. (Default mode) host: The container will not virtualize it's own net, i...","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://jet-w.github.io/techniques/Tools/docker/06.Docker%20Network.html"}],["meta",{"property":"og:site_name","content":"Haiyue's Blog"}],["meta",{"property":"og:title","content":"06. Docker Network"}],["meta",{"property":"og:description","content":"Docker Network Mode bridge: setup ip for every container, and connect container to docker0 network bridge. (Default mode) host: The container will not virtualize it's own net, i..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:author","content":"Haiyue"}],["meta",{"property":"article:tag","content":"docker"}],["meta",{"property":"article:published_time","content":"2024-10-23T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"06. Docker Network\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-10-23T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Haiyue\\"}]}"]]},"headers":[{"level":2,"title":"Docker Network Mode","slug":"docker-network-mode","link":"#docker-network-mode","children":[{"level":3,"title":"Bridge","slug":"bridge","link":"#bridge","children":[]},{"level":3,"title":"Host","slug":"host","link":"#host","children":[]},{"level":3,"title":"None","slug":"none","link":"#none","children":[]},{"level":3,"title":"Container","slug":"container","link":"#container","children":[]},{"level":3,"title":"Network Operation","slug":"network-operation","link":"#network-operation","children":[]}]},{"level":2,"title":"Customized Network","slug":"customized-network","link":"#customized-network","children":[]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"readingTime":{"minutes":1.28,"words":383},"filePathRelative":"techniques/Tools/docker/06.Docker Network.md","localizedDate":"October 23, 2024","excerpt":"<h2>Docker Network Mode</h2>\\n<ul>\\n<li>bridge: setup ip for every container, and connect container to <code>docker0</code> network bridge. (Default mode)</li>\\n<li>host: The container will not virtualize it's own net, it share the ip and port with host.</li>\\n<li>none: The container own its own network namespace, but there is no netowrk settings, such as veth pair, bridge connection, ip, etc.</li>\\n</ul>","autoDesc":true}`);export{p as comp,g as data};

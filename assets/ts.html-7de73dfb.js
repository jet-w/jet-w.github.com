import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,f as t}from"./app-084dfc66.js";const p={},e=t(`<h2 id="download-ts" tabindex="-1"><a class="header-anchor" href="#download-ts" aria-hidden="true">#</a> download ts</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> requests <span class="token keyword">as</span> req
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> cv2

<span class="token keyword">def</span> <span class="token function">get_video_resolution</span><span class="token punctuation">(</span>ts_file_path<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        <span class="token comment"># Open the TS file</span>
        cap <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span>ts_file_path<span class="token punctuation">)</span>
        <span class="token comment"># Get the resolution</span>
        width <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>cap<span class="token punctuation">.</span>get<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_WIDTH<span class="token punctuation">)</span><span class="token punctuation">)</span>
        height <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>cap<span class="token punctuation">.</span>get<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_HEIGHT<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> width<span class="token punctuation">,</span> height
    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Error: </span><span class="token interpolation"><span class="token punctuation">{</span>e<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">None</span>



uri <span class="token operator">=</span> <span class="token string">&#39;https://embed-cloudfront.wistia.com/deliveries/731e2344da7f9e5dea577a06ba99a98fc3308213.m3u8/&#39;</span>

df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">r&#39;C:\\Users\\Administrator\\Mozaik\\videos.xlsx&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
df <span class="token operator">=</span> df<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isnull<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token boolean">False</span><span class="token punctuation">]</span>
base_path <span class="token operator">=</span> <span class="token string">r&#39;C:\\Users\\Administrator\\Mozaik&#39;</span>

base_url <span class="token operator">=</span> <span class="token string">&#39;https://embed-cloudfront.wistia.com/deliveries/&#39;</span>

<span class="token keyword">for</span> i <span class="token keyword">in</span> df<span class="token punctuation">.</span>index<span class="token punctuation">:</span>
    item <span class="token operator">=</span> df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    idx <span class="token operator">=</span> <span class="token number">1</span>
    temp <span class="token operator">=</span> <span class="token boolean">None</span>
    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        fname <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;seg-</span><span class="token interpolation"><span class="token punctuation">{</span>idx<span class="token punctuation">}</span></span><span class="token string">-v1-a1.ts&quot;</span></span>
        idx <span class="token operator">+=</span> <span class="token number">1</span>
        folder <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>item<span class="token punctuation">[</span><span class="token string">&quot;Title&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token punctuation">{</span>item<span class="token punctuation">[</span><span class="token string">&quot;subtitle&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>folder<span class="token punctuation">)</span>
        store_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>base_path<span class="token punctuation">,</span> folder<span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>store_path<span class="token punctuation">)</span><span class="token punctuation">:</span>
            os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>store_path<span class="token punctuation">)</span>
        fullname <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>store_path<span class="token punctuation">,</span> fname<span class="token punctuation">)</span>
        <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>fullname<span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">continue</span>
        url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>base_url<span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span>item<span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">{</span>fname<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
        resp <span class="token operator">=</span> req<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token number">200</span> <span class="token operator">==</span> resp<span class="token punctuation">.</span>status_code<span class="token punctuation">:</span>
            temp <span class="token operator">=</span> resp<span class="token punctuation">.</span>content
            <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>fullname<span class="token punctuation">,</span> <span class="token string">&#39;wb&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fw<span class="token punctuation">:</span>
                fw<span class="token punctuation">.</span>write<span class="token punctuation">(</span>resp<span class="token punctuation">.</span>content<span class="token punctuation">)</span>
            size <span class="token operator">=</span> get_video_resolution<span class="token punctuation">(</span>fullname<span class="token punctuation">)</span>
            <span class="token keyword">if</span> size<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> <span class="token number">1000</span><span class="token punctuation">:</span>
                os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>fullname<span class="token punctuation">)</span>
                <span class="token keyword">break</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">break</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),o=[e];function c(i,l){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","ts.html.vue"]]);export{k as default};

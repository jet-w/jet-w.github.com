const e=JSON.parse(`{"key":"v-29fea3ae","path":"/techniques/AI/Others/04.Speech2Text.html","title":"Audio to Text (OpenAI)","lang":"en-US","frontmatter":{"title":"Audio to Text (OpenAI)","date":"2024-01-08T00:00:00.000Z","icon":"circle-dot","author":"Haiyue","category":["AI"],"tag":["resources"],"star":false,"sticky":false,"description":"import torch from transformers import AutoModelForSpeechSeq2Seq, AutoProcessor, pipeline from datasets import load_dataset device = \\"cuda:0\\" if torch.cuda.is_available() else \\"cpu\\" torch_dtype = torch.float16 if torch.cuda.is_available() else torch.float32 model_id = \\"openai/whisper-large-v3\\" model = AutoModelForSpeechSeq2Seq.from_pretrained( model_id, torch_dtype=torch_dtype, low_cpu_mem_usage=True, use_safetensors=True ) model.to(device) processor = AutoProcessor.from_pretrained(model_id) pipe = pipeline( \\"automatic-speech-recognition\\", model=model, tokenizer=processor.tokenizer, feature_extractor=processor.feature_extractor, max_new_tokens=128, chunk_length_s=30, batch_size=16, return_timestamps=True, torch_dtype=torch_dtype, device=device, )","head":[["meta",{"property":"og:url","content":"https://seamice.github.io/blog/techniques/AI/Others/04.Speech2Text.html"}],["meta",{"property":"og:site_name","content":"Haiyue's Blog"}],["meta",{"property":"og:title","content":"Audio to Text (OpenAI)"}],["meta",{"property":"og:description","content":"import torch from transformers import AutoModelForSpeechSeq2Seq, AutoProcessor, pipeline from datasets import load_dataset device = \\"cuda:0\\" if torch.cuda.is_available() else \\"cpu\\" torch_dtype = torch.float16 if torch.cuda.is_available() else torch.float32 model_id = \\"openai/whisper-large-v3\\" model = AutoModelForSpeechSeq2Seq.from_pretrained( model_id, torch_dtype=torch_dtype, low_cpu_mem_usage=True, use_safetensors=True ) model.to(device) processor = AutoProcessor.from_pretrained(model_id) pipe = pipeline( \\"automatic-speech-recognition\\", model=model, tokenizer=processor.tokenizer, feature_extractor=processor.feature_extractor, max_new_tokens=128, chunk_length_s=30, batch_size=16, return_timestamps=True, torch_dtype=torch_dtype, device=device, )"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-07-02T13:50:31.000Z"}],["meta",{"property":"article:author","content":"Haiyue"}],["meta",{"property":"article:tag","content":"resources"}],["meta",{"property":"article:published_time","content":"2024-01-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-02T13:50:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Audio to Text (OpenAI)\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-01-08T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-02T13:50:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Haiyue\\"}]}"]]},"headers":[{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"git":{"createdTime":1719928231000,"updatedTime":1719928231000,"contributors":[{"name":"Haiyue","email":"nutterair1989@gmail.com","commits":1}]},"readingTime":{"minutes":0.4,"words":121},"filePathRelative":"techniques/AI/Others/04.Speech2Text.md","localizedDate":"January 8, 2024","excerpt":"<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">import</span> torch\\n<span class=\\"token keyword\\">from</span> transformers <span class=\\"token keyword\\">import</span> AutoModelForSpeechSeq2Seq<span class=\\"token punctuation\\">,</span> AutoProcessor<span class=\\"token punctuation\\">,</span> pipeline\\n<span class=\\"token keyword\\">from</span> datasets <span class=\\"token keyword\\">import</span> load_dataset\\n\\ndevice <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"cuda:0\\"</span> <span class=\\"token keyword\\">if</span> torch<span class=\\"token punctuation\\">.</span>cuda<span class=\\"token punctuation\\">.</span>is_available<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">else</span> <span class=\\"token string\\">\\"cpu\\"</span>\\ntorch_dtype <span class=\\"token operator\\">=</span> torch<span class=\\"token punctuation\\">.</span>float16 <span class=\\"token keyword\\">if</span> torch<span class=\\"token punctuation\\">.</span>cuda<span class=\\"token punctuation\\">.</span>is_available<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">else</span> torch<span class=\\"token punctuation\\">.</span>float32\\n\\nmodel_id <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"openai/whisper-large-v3\\"</span>\\n\\nmodel <span class=\\"token operator\\">=</span> AutoModelForSpeechSeq2Seq<span class=\\"token punctuation\\">.</span>from_pretrained<span class=\\"token punctuation\\">(</span>\\n    model_id<span class=\\"token punctuation\\">,</span> torch_dtype<span class=\\"token operator\\">=</span>torch_dtype<span class=\\"token punctuation\\">,</span> low_cpu_mem_usage<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">True</span><span class=\\"token punctuation\\">,</span> use_safetensors<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">True</span>\\n<span class=\\"token punctuation\\">)</span>\\nmodel<span class=\\"token punctuation\\">.</span>to<span class=\\"token punctuation\\">(</span>device<span class=\\"token punctuation\\">)</span>\\n\\nprocessor <span class=\\"token operator\\">=</span> AutoProcessor<span class=\\"token punctuation\\">.</span>from_pretrained<span class=\\"token punctuation\\">(</span>model_id<span class=\\"token punctuation\\">)</span>\\n\\npipe <span class=\\"token operator\\">=</span> pipeline<span class=\\"token punctuation\\">(</span>\\n    <span class=\\"token string\\">\\"automatic-speech-recognition\\"</span><span class=\\"token punctuation\\">,</span>\\n    model<span class=\\"token operator\\">=</span>model<span class=\\"token punctuation\\">,</span>\\n    tokenizer<span class=\\"token operator\\">=</span>processor<span class=\\"token punctuation\\">.</span>tokenizer<span class=\\"token punctuation\\">,</span>\\n    feature_extractor<span class=\\"token operator\\">=</span>processor<span class=\\"token punctuation\\">.</span>feature_extractor<span class=\\"token punctuation\\">,</span>\\n    max_new_tokens<span class=\\"token operator\\">=</span><span class=\\"token number\\">128</span><span class=\\"token punctuation\\">,</span>\\n    chunk_length_s<span class=\\"token operator\\">=</span><span class=\\"token number\\">30</span><span class=\\"token punctuation\\">,</span>\\n    batch_size<span class=\\"token operator\\">=</span><span class=\\"token number\\">16</span><span class=\\"token punctuation\\">,</span>\\n    return_timestamps<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">True</span><span class=\\"token punctuation\\">,</span>\\n    torch_dtype<span class=\\"token operator\\">=</span>torch_dtype<span class=\\"token punctuation\\">,</span>\\n    device<span class=\\"token operator\\">=</span>device<span class=\\"token punctuation\\">,</span>\\n<span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{e as data};

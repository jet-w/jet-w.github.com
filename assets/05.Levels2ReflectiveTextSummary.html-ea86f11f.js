import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as n,o as a,c as r,b as t,d,e as l,f as s}from"./app-449d8a26.js";const i={},h=s("<table><thead><tr><th>ID</th><th>Thought</th><th>Effect</th></tr></thead><tbody><tr><td>1</td><td>Using the definition to do directly</td><td>Result is not good</td></tr><tr><td>2</td><td>Decompose the level definition, then to find the best match as the result based on the definition of levels and the question. <br> Using lots of match methods to finetune.</td><td>Result is not good</td></tr><tr><td>3</td><td>Finetune the model on OpenAI, and then to identify the level based on level definition and question<br> Using three approaches to sample data for training, <br> 1. Sample data from the shifting level dataset (Grouped sampling from each level randomly) <br> 2. Sample data from overall dataset automatically (Grouped sampling from each level randomly) <br> 3. Group sample data from all data randomly.</td><td>Result is still not good enough</td></tr><tr><td>4</td><td>Using the GPT to summarize the definition for levels, then using the new definitions to create new prompt for getting result</td><td>On the way</td></tr></tbody></table><p>Prompt finetuning over many times.</p>",2),c={href:"https://colab.research.google.com/drive/1EPxMGd9swV3lnJuVThK3cAepl6zrlX0w?usp=sharing",target:"_blank",rel:"noopener noreferrer"};function m(f,p){const e=n("ExternalLinkIcon");return a(),r("div",null,[h,t("p",null,[t("a",c,[d("All the code could find from Google Colab"),l(e)])])])}const _=o(i,[["render",m],["__file","05.Levels2ReflectiveTextSummary.html.vue"]]);export{_ as default};
